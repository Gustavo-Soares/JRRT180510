Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type byte
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type short
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type int
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type long
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type float
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type double
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type char
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type boolean
Adding sequence to active sequences of type class java.lang.String
Adding sequence to active sequences of type class java.lang.String
getActivesequencesThatYield: entering method, clazz=boolean
getActivesequencesThatYield: returning 2 sequences.
getActivesequencesThatYield: entering method, clazz=byte
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=char
getActivesequencesThatYield: returning 4 sequences.
getActivesequencesThatYield: entering method, clazz=double
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=float
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=int
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=short
getActivesequencesThatYield: returning 5 sequences.
getActivesequencesThatYield: entering method, clazz=class java.lang.String
getActivesequencesThatYield: returning 2 sequences.
Statements : 
java.lang.Object.<init>()
Package_1.ClassId_0.<init>()
Package_1.ClassId_2.methodid_1(long)
Package_0.ClassId_1.<init>()
Package_0.ClassId_1.methodid_0()
Package_1.ClassId_0.m_0()
Package_1.ClassId_2.<init>()
Initial sequences (seeds):
var0 =  prim : byte:-1 : 

var0 =  prim : byte:0 : 

var0 =  prim : byte:1 : 

var0 =  prim : byte:10 : 

var0 =  prim : byte:100 : 

var0 =  prim : short:-1 : 

var0 =  prim : short:0 : 

var0 =  prim : short:1 : 

var0 =  prim : short:10 : 

var0 =  prim : short:100 : 

var0 =  prim : int:-1 : 

var0 =  prim : int:0 : 

var0 =  prim : int:1 : 

var0 =  prim : int:10 : 

var0 =  prim : int:100 : 

var0 =  prim : long:-1 : 

var0 =  prim : long:0 : 

var0 =  prim : long:1 : 

var0 =  prim : long:10 : 

var0 =  prim : long:100 : 

var0 =  prim : float:-1.0 : 

var0 =  prim : float:0.0 : 

var0 =  prim : float:1.0 : 

var0 =  prim : float:10.0 : 

var0 =  prim : float:100.0 : 

var0 =  prim : double:-1.0 : 

var0 =  prim : double:0.0 : 

var0 =  prim : double:1.0 : 

var0 =  prim : double:10.0 : 

var0 =  prim : double:100.0 : 

var0 =  prim : char:23 : 

var0 =  prim : char:20 : 

var0 =  prim : char:34 : 

var0 =  prim : char:61 : 

var0 =  prim : boolean:true : 

var0 =  prim : boolean:false : 

var0 =  prim : java.lang.String:"" : 

var0 =  prim : java.lang.String:"hi!" : 

-------------------------------------------
randoop.util.Randomness: total calls to random: 1
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: found no sequences matching class class Package_1.ClassId_0
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 2
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: found no sequences matching class class Package_1.ClassId_2
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 3
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: found no sequences matching class class Package_0.ClassId_1
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 4
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: found no sequences matching class class Package_1.ClassId_2
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 5
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: found no sequences matching class class Package_0.ClassId_1
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 6
Selected statement: java.lang.Object.<init>()
Successfully created new unique sequence:var0 =  cons : java.lang.Object.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class java.lang.Object
Sequence after execution: 
java.lang.Object var0 = new java.lang.Object();
// <NormalExecution object=object-of-type-java.lang.Object>;

allSequences.size()=1
-------------------------------------------
randoop.util.Randomness: total calls to random: 7
Selected statement: Package_1.ClassId_2.<init>()
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;

allSequences.size()=2
-------------------------------------------
randoop.util.Randomness: total calls to random: 8
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 1 sequences.
components: 1
randoop.util.Randomness: total calls to random: 9
randoop.util.Randomness: total calls to random: 10
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 11
randoop.util.Randomness: total calls to random: 12
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=3
-------------------------------------------
randoop.util.Randomness: total calls to random: 13
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: found no sequences matching class class Package_0.ClassId_1
getActivesequencesThatYield: returning 0 sequences.
components: 0
forbid-null option is true. Failed to create new sequence.
Failed to find inputs for statement.
-------------------------------------------
randoop.util.Randomness: total calls to random: 14
Selected statement: Package_0.ClassId_1.<init>()
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;

allSequences.size()=4
-------------------------------------------
randoop.util.Randomness: total calls to random: 15
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 1 sequences.
components: 1
randoop.util.Randomness: total calls to random: 16
randoop.util.Randomness: total calls to random: 17
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true

allSequences.size()=5
-------------------------------------------
randoop.util.Randomness: total calls to random: 18
Selected statement: Package_1.ClassId_0.<init>()
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;

allSequences.size()=6
-------------------------------------------
randoop.util.Randomness: total calls to random: 19
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 20
randoop.util.Randomness: total calls to random: 21
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 22
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 23
randoop.util.Randomness: total calls to random: 24
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 25
randoop.util.Randomness: total calls to random: 26
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=7
-------------------------------------------
randoop.util.Randomness: total calls to random: 27
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 6 sequences.
components: 6
randoop.util.Randomness: total calls to random: 28
randoop.util.Randomness: total calls to random: 29
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 30
randoop.util.Randomness: total calls to random: 31
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=8
-------------------------------------------
randoop.util.Randomness: total calls to random: 32
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 33
randoop.util.Randomness: total calls to random: 34
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 35
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 36
randoop.util.Randomness: total calls to random: 37
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 38
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 2 sequences.
components: 2
randoop.util.Randomness: total calls to random: 39
randoop.util.Randomness: total calls to random: 40
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=9
-------------------------------------------
randoop.util.Randomness: total calls to random: 41
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 3 sequences.
components: 3
randoop.util.Randomness: total calls to random: 42
randoop.util.Randomness: total calls to random: 43
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 44
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 3 sequences.
components: 3
randoop.util.Randomness: total calls to random: 45
randoop.util.Randomness: total calls to random: 46
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 47
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 3 sequences.
components: 3
randoop.util.Randomness: total calls to random: 48
randoop.util.Randomness: total calls to random: 49
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true

allSequences.size()=10
-------------------------------------------
randoop.util.Randomness: total calls to random: 50
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 9 sequences.
components: 9
randoop.util.Randomness: total calls to random: 51
randoop.util.Randomness: total calls to random: 52
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 53
randoop.util.Randomness: total calls to random: 54
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=11
-------------------------------------------
randoop.util.Randomness: total calls to random: 55
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 10 sequences.
components: 10
randoop.util.Randomness: total calls to random: 56
randoop.util.Randomness: total calls to random: 57
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 58
randoop.util.Randomness: total calls to random: 59
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=12
-------------------------------------------
randoop.util.Randomness: total calls to random: 60
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 6 sequences.
components: 6
randoop.util.Randomness: total calls to random: 61
randoop.util.Randomness: total calls to random: 62
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=13
-------------------------------------------
randoop.util.Randomness: total calls to random: 63
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 7 sequences.
components: 7
randoop.util.Randomness: total calls to random: 64
randoop.util.Randomness: total calls to random: 65
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=14
-------------------------------------------
randoop.util.Randomness: total calls to random: 66
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 13 sequences.
components: 13
randoop.util.Randomness: total calls to random: 67
randoop.util.Randomness: total calls to random: 68
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 69
randoop.util.Randomness: total calls to random: 70
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=15
-------------------------------------------
randoop.util.Randomness: total calls to random: 71
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 8 sequences.
components: 8
randoop.util.Randomness: total calls to random: 72
randoop.util.Randomness: total calls to random: 73
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=16
-------------------------------------------
randoop.util.Randomness: total calls to random: 74
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 9 sequences.
components: 9
randoop.util.Randomness: total calls to random: 75
randoop.util.Randomness: total calls to random: 76
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=17
-------------------------------------------
randoop.util.Randomness: total calls to random: 77
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 10 sequences.
components: 10
randoop.util.Randomness: total calls to random: 78
randoop.util.Randomness: total calls to random: 79
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=18
-------------------------------------------
randoop.util.Randomness: total calls to random: 80
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 11 sequences.
components: 11
randoop.util.Randomness: total calls to random: 81
randoop.util.Randomness: total calls to random: 82
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=19
-------------------------------------------
randoop.util.Randomness: total calls to random: 83
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 18 sequences.
components: 18
randoop.util.Randomness: total calls to random: 84
randoop.util.Randomness: total calls to random: 85
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 86
randoop.util.Randomness: total calls to random: 87
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true

allSequences.size()=20
-------------------------------------------
randoop.util.Randomness: total calls to random: 88
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 13 sequences.
components: 13
randoop.util.Randomness: total calls to random: 89
randoop.util.Randomness: total calls to random: 90
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=21
-------------------------------------------
randoop.util.Randomness: total calls to random: 91
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 20 sequences.
components: 20
randoop.util.Randomness: total calls to random: 92
randoop.util.Randomness: total calls to random: 93
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 94
randoop.util.Randomness: total calls to random: 95
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:100 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=22
-------------------------------------------
randoop.util.Randomness: total calls to random: 96
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 14 sequences.
components: 14
randoop.util.Randomness: total calls to random: 97
randoop.util.Randomness: total calls to random: 98
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=23
-------------------------------------------
randoop.util.Randomness: total calls to random: 99
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 22 sequences.
components: 22
randoop.util.Randomness: total calls to random: 100
randoop.util.Randomness: total calls to random: 101
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 102
randoop.util.Randomness: total calls to random: 103
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:-1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=24
-------------------------------------------
randoop.util.Randomness: total calls to random: 104
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 15 sequences.
components: 15
randoop.util.Randomness: total calls to random: 105
randoop.util.Randomness: total calls to random: 106
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=25
-------------------------------------------
randoop.util.Randomness: total calls to random: 107
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 24 sequences.
components: 24
randoop.util.Randomness: total calls to random: 108
randoop.util.Randomness: total calls to random: 109
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 110
randoop.util.Randomness: total calls to random: 111
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=26
-------------------------------------------
randoop.util.Randomness: total calls to random: 112
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 17 sequences.
components: 17
randoop.util.Randomness: total calls to random: 113
randoop.util.Randomness: total calls to random: 114
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=27
-------------------------------------------
randoop.util.Randomness: total calls to random: 115
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 18 sequences.
components: 18
randoop.util.Randomness: total calls to random: 116
randoop.util.Randomness: total calls to random: 117
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=28
-------------------------------------------
randoop.util.Randomness: total calls to random: 118
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 19 sequences.
components: 19
randoop.util.Randomness: total calls to random: 119
randoop.util.Randomness: total calls to random: 120
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=29
-------------------------------------------
randoop.util.Randomness: total calls to random: 121
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 28 sequences.
components: 28
randoop.util.Randomness: total calls to random: 122
randoop.util.Randomness: total calls to random: 123
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 124
randoop.util.Randomness: total calls to random: 125
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:-1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=30
-------------------------------------------
randoop.util.Randomness: total calls to random: 126
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 20 sequences.
components: 20
randoop.util.Randomness: total calls to random: 127
randoop.util.Randomness: total calls to random: 128
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=31
-------------------------------------------
randoop.util.Randomness: total calls to random: 129
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 21 sequences.
components: 21
randoop.util.Randomness: total calls to random: 130
randoop.util.Randomness: total calls to random: 131
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=32
-------------------------------------------
randoop.util.Randomness: total calls to random: 132
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 22 sequences.
components: 22
randoop.util.Randomness: total calls to random: 133
randoop.util.Randomness: total calls to random: 134
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=33
-------------------------------------------
randoop.util.Randomness: total calls to random: 135
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 23 sequences.
components: 23
randoop.util.Randomness: total calls to random: 136
randoop.util.Randomness: total calls to random: 137
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 138
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 23 sequences.
components: 23
randoop.util.Randomness: total calls to random: 139
randoop.util.Randomness: total calls to random: 140
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=34
-------------------------------------------
randoop.util.Randomness: total calls to random: 141
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 24 sequences.
components: 24
randoop.util.Randomness: total calls to random: 142
randoop.util.Randomness: total calls to random: 143
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=35
-------------------------------------------
randoop.util.Randomness: total calls to random: 144
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 25 sequences.
components: 25
randoop.util.Randomness: total calls to random: 145
randoop.util.Randomness: total calls to random: 146
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 147
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 34 sequences.
components: 34
randoop.util.Randomness: total calls to random: 148
randoop.util.Randomness: total calls to random: 149
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 150
randoop.util.Randomness: total calls to random: 151
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:0 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=36
-------------------------------------------
randoop.util.Randomness: total calls to random: 152
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 26 sequences.
components: 26
randoop.util.Randomness: total calls to random: 153
randoop.util.Randomness: total calls to random: 154
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 155
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 26 sequences.
components: 26
randoop.util.Randomness: total calls to random: 156
randoop.util.Randomness: total calls to random: 157
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=37
-------------------------------------------
randoop.util.Randomness: total calls to random: 158
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 27 sequences.
components: 27
randoop.util.Randomness: total calls to random: 159
randoop.util.Randomness: total calls to random: 160
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=38
-------------------------------------------
randoop.util.Randomness: total calls to random: 161
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 28 sequences.
components: 28
randoop.util.Randomness: total calls to random: 162
randoop.util.Randomness: total calls to random: 163
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=39
-------------------------------------------
randoop.util.Randomness: total calls to random: 164
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 29 sequences.
components: 29
randoop.util.Randomness: total calls to random: 165
randoop.util.Randomness: total calls to random: 166
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=40
-------------------------------------------
randoop.util.Randomness: total calls to random: 167
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 30 sequences.
components: 30
randoop.util.Randomness: total calls to random: 168
randoop.util.Randomness: total calls to random: 169
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=41
-------------------------------------------
randoop.util.Randomness: total calls to random: 170
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 31 sequences.
components: 31
randoop.util.Randomness: total calls to random: 171
randoop.util.Randomness: total calls to random: 172
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=42
-------------------------------------------
randoop.util.Randomness: total calls to random: 173
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 32 sequences.
components: 32
randoop.util.Randomness: total calls to random: 174
randoop.util.Randomness: total calls to random: 175
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=43
-------------------------------------------
randoop.util.Randomness: total calls to random: 176
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 33 sequences.
components: 33
randoop.util.Randomness: total calls to random: 177
randoop.util.Randomness: total calls to random: 178
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=44
-------------------------------------------
randoop.util.Randomness: total calls to random: 179
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 43 sequences.
components: 43
randoop.util.Randomness: total calls to random: 180
randoop.util.Randomness: total calls to random: 181
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 182
randoop.util.Randomness: total calls to random: 183
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=45
-------------------------------------------
randoop.util.Randomness: total calls to random: 184
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 35 sequences.
components: 35
randoop.util.Randomness: total calls to random: 185
randoop.util.Randomness: total calls to random: 186
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=46
-------------------------------------------
randoop.util.Randomness: total calls to random: 187
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 36 sequences.
components: 36
randoop.util.Randomness: total calls to random: 188
randoop.util.Randomness: total calls to random: 189
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=47
-------------------------------------------
randoop.util.Randomness: total calls to random: 190
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 37 sequences.
components: 37
randoop.util.Randomness: total calls to random: 191
randoop.util.Randomness: total calls to random: 192
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=48
-------------------------------------------
randoop.util.Randomness: total calls to random: 193
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 194
randoop.util.Randomness: total calls to random: 195
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 196
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 38 sequences.
components: 38
randoop.util.Randomness: total calls to random: 197
randoop.util.Randomness: total calls to random: 198
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=49
-------------------------------------------
randoop.util.Randomness: total calls to random: 199
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 48 sequences.
components: 48
randoop.util.Randomness: total calls to random: 200
randoop.util.Randomness: total calls to random: 201
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 202
randoop.util.Randomness: total calls to random: 203
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=50
-------------------------------------------
randoop.util.Randomness: total calls to random: 204
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 40 sequences.
components: 40
randoop.util.Randomness: total calls to random: 205
randoop.util.Randomness: total calls to random: 206
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=51
-------------------------------------------
randoop.util.Randomness: total calls to random: 207
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 41 sequences.
components: 41
randoop.util.Randomness: total calls to random: 208
randoop.util.Randomness: total calls to random: 209
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 210
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 41 sequences.
components: 41
randoop.util.Randomness: total calls to random: 211
randoop.util.Randomness: total calls to random: 212
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=52
-------------------------------------------
randoop.util.Randomness: total calls to random: 213
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 51 sequences.
components: 51
randoop.util.Randomness: total calls to random: 214
randoop.util.Randomness: total calls to random: 215
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 216
randoop.util.Randomness: total calls to random: 217
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 218
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 42 sequences.
components: 42
randoop.util.Randomness: total calls to random: 219
randoop.util.Randomness: total calls to random: 220
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 221
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 42 sequences.
components: 42
randoop.util.Randomness: total calls to random: 222
randoop.util.Randomness: total calls to random: 223
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=53
-------------------------------------------
randoop.util.Randomness: total calls to random: 224
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 43 sequences.
components: 43
randoop.util.Randomness: total calls to random: 225
randoop.util.Randomness: total calls to random: 226
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=54
-------------------------------------------
randoop.util.Randomness: total calls to random: 227
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 44 sequences.
components: 44
randoop.util.Randomness: total calls to random: 228
randoop.util.Randomness: total calls to random: 229
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 230
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 44 sequences.
components: 44
randoop.util.Randomness: total calls to random: 231
randoop.util.Randomness: total calls to random: 232
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 233
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 53 sequences.
components: 53
randoop.util.Randomness: total calls to random: 234
randoop.util.Randomness: total calls to random: 235
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 236
randoop.util.Randomness: total calls to random: 237
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:-1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=55
-------------------------------------------
randoop.util.Randomness: total calls to random: 238
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 239
randoop.util.Randomness: total calls to random: 240
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 241
randoop.util.Randomness: total calls to random: 242
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=56
-------------------------------------------
randoop.util.Randomness: total calls to random: 243
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 45 sequences.
components: 45
randoop.util.Randomness: total calls to random: 244
randoop.util.Randomness: total calls to random: 245
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=57
-------------------------------------------
randoop.util.Randomness: total calls to random: 246
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 56 sequences.
components: 56
randoop.util.Randomness: total calls to random: 247
randoop.util.Randomness: total calls to random: 248
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 249
randoop.util.Randomness: total calls to random: 250
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  prim : long:-1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true

allSequences.size()=58
-------------------------------------------
randoop.util.Randomness: total calls to random: 251
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 47 sequences.
components: 47
randoop.util.Randomness: total calls to random: 252
randoop.util.Randomness: total calls to random: 253
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 254
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 47 sequences.
components: 47
randoop.util.Randomness: total calls to random: 255
randoop.util.Randomness: total calls to random: 256
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 257
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 47 sequences.
components: 47
randoop.util.Randomness: total calls to random: 258
randoop.util.Randomness: total calls to random: 259
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=59
-------------------------------------------
randoop.util.Randomness: total calls to random: 260
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 58 sequences.
components: 58
randoop.util.Randomness: total calls to random: 261
randoop.util.Randomness: total calls to random: 262
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 263
randoop.util.Randomness: total calls to random: 264
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=60
-------------------------------------------
randoop.util.Randomness: total calls to random: 265
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 59 sequences.
components: 59
randoop.util.Randomness: total calls to random: 266
randoop.util.Randomness: total calls to random: 267
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 268
randoop.util.Randomness: total calls to random: 269
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=61
-------------------------------------------
randoop.util.Randomness: total calls to random: 270
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 60 sequences.
components: 60
randoop.util.Randomness: total calls to random: 271
randoop.util.Randomness: total calls to random: 272
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 273
randoop.util.Randomness: total calls to random: 274
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:-1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true

allSequences.size()=62
-------------------------------------------
randoop.util.Randomness: total calls to random: 275
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 50 sequences.
components: 50
randoop.util.Randomness: total calls to random: 276
randoop.util.Randomness: total calls to random: 277
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 278
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 50 sequences.
components: 50
randoop.util.Randomness: total calls to random: 279
randoop.util.Randomness: total calls to random: 280
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=63
-------------------------------------------
randoop.util.Randomness: total calls to random: 281
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 62 sequences.
components: 62
randoop.util.Randomness: total calls to random: 282
randoop.util.Randomness: total calls to random: 283
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 284
randoop.util.Randomness: total calls to random: 285
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:10 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=64
-------------------------------------------
randoop.util.Randomness: total calls to random: 286
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 51 sequences.
components: 51
randoop.util.Randomness: total calls to random: 287
randoop.util.Randomness: total calls to random: 288
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=65
-------------------------------------------
randoop.util.Randomness: total calls to random: 289
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 52 sequences.
components: 52
randoop.util.Randomness: total calls to random: 290
randoop.util.Randomness: total calls to random: 291
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=66
-------------------------------------------
randoop.util.Randomness: total calls to random: 292
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 53 sequences.
components: 53
randoop.util.Randomness: total calls to random: 293
randoop.util.Randomness: total calls to random: 294
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=67
-------------------------------------------
randoop.util.Randomness: total calls to random: 295
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 296
randoop.util.Randomness: total calls to random: 297
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 298
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 299
randoop.util.Randomness: total calls to random: 300
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 301
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 302
randoop.util.Randomness: total calls to random: 303
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 304
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 54 sequences.
components: 54
randoop.util.Randomness: total calls to random: 305
randoop.util.Randomness: total calls to random: 306
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=68
-------------------------------------------
randoop.util.Randomness: total calls to random: 307
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 67 sequences.
components: 67
randoop.util.Randomness: total calls to random: 308
randoop.util.Randomness: total calls to random: 309
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 310
randoop.util.Randomness: total calls to random: 311
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=69
-------------------------------------------
randoop.util.Randomness: total calls to random: 312
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 56 sequences.
components: 56
randoop.util.Randomness: total calls to random: 313
randoop.util.Randomness: total calls to random: 314
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=70
-------------------------------------------
randoop.util.Randomness: total calls to random: 315
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 57 sequences.
components: 57
randoop.util.Randomness: total calls to random: 316
randoop.util.Randomness: total calls to random: 317
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=71
-------------------------------------------
randoop.util.Randomness: total calls to random: 318
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 70 sequences.
components: 70
randoop.util.Randomness: total calls to random: 319
randoop.util.Randomness: total calls to random: 320
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 321
randoop.util.Randomness: total calls to random: 322
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=72
-------------------------------------------
randoop.util.Randomness: total calls to random: 323
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 59 sequences.
components: 59
randoop.util.Randomness: total calls to random: 324
randoop.util.Randomness: total calls to random: 325
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 326
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 59 sequences.
components: 59
randoop.util.Randomness: total calls to random: 327
randoop.util.Randomness: total calls to random: 328
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=73
-------------------------------------------
randoop.util.Randomness: total calls to random: 329
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 330
randoop.util.Randomness: total calls to random: 331
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 332
randoop.util.Randomness: total calls to random: 333
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=74
-------------------------------------------
randoop.util.Randomness: total calls to random: 334
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 61 sequences.
components: 61
randoop.util.Randomness: total calls to random: 335
randoop.util.Randomness: total calls to random: 336
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 337
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 73 sequences.
components: 73
randoop.util.Randomness: total calls to random: 338
randoop.util.Randomness: total calls to random: 339
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 340
randoop.util.Randomness: total calls to random: 341
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:100 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=75
-------------------------------------------
randoop.util.Randomness: total calls to random: 342
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 61 sequences.
components: 61
randoop.util.Randomness: total calls to random: 343
randoop.util.Randomness: total calls to random: 344
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 345
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 61 sequences.
components: 61
randoop.util.Randomness: total calls to random: 346
randoop.util.Randomness: total calls to random: 347
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 348
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 74 sequences.
components: 74
randoop.util.Randomness: total calls to random: 349
randoop.util.Randomness: total calls to random: 350
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 351
randoop.util.Randomness: total calls to random: 352
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=76
-------------------------------------------
randoop.util.Randomness: total calls to random: 353
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 75 sequences.
components: 75
randoop.util.Randomness: total calls to random: 354
randoop.util.Randomness: total calls to random: 355
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 356
randoop.util.Randomness: total calls to random: 357
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=77
-------------------------------------------
randoop.util.Randomness: total calls to random: 358
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 63 sequences.
components: 63
randoop.util.Randomness: total calls to random: 359
randoop.util.Randomness: total calls to random: 360
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 361
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 76 sequences.
components: 76
randoop.util.Randomness: total calls to random: 362
randoop.util.Randomness: total calls to random: 363
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 364
randoop.util.Randomness: total calls to random: 365
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true

allSequences.size()=78
-------------------------------------------
randoop.util.Randomness: total calls to random: 366
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 64 sequences.
components: 64
randoop.util.Randomness: total calls to random: 367
randoop.util.Randomness: total calls to random: 368
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 369
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 64 sequences.
components: 64
randoop.util.Randomness: total calls to random: 370
randoop.util.Randomness: total calls to random: 371
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=79
-------------------------------------------
randoop.util.Randomness: total calls to random: 372
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 65 sequences.
components: 65
randoop.util.Randomness: total calls to random: 373
randoop.util.Randomness: total calls to random: 374
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=80
-------------------------------------------
randoop.util.Randomness: total calls to random: 375
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 66 sequences.
components: 66
randoop.util.Randomness: total calls to random: 376
randoop.util.Randomness: total calls to random: 377
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 378
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 66 sequences.
components: 66
randoop.util.Randomness: total calls to random: 379
randoop.util.Randomness: total calls to random: 380
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 381
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 79 sequences.
components: 79
randoop.util.Randomness: total calls to random: 382
randoop.util.Randomness: total calls to random: 383
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 384
randoop.util.Randomness: total calls to random: 385
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=81
-------------------------------------------
randoop.util.Randomness: total calls to random: 386
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 67 sequences.
components: 67
randoop.util.Randomness: total calls to random: 387
randoop.util.Randomness: total calls to random: 388
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=82
-------------------------------------------
randoop.util.Randomness: total calls to random: 389
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 81 sequences.
components: 81
randoop.util.Randomness: total calls to random: 390
randoop.util.Randomness: total calls to random: 391
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 392
randoop.util.Randomness: total calls to random: 393
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=83
-------------------------------------------
randoop.util.Randomness: total calls to random: 394
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 69 sequences.
components: 69
randoop.util.Randomness: total calls to random: 395
randoop.util.Randomness: total calls to random: 396
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 397
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 82 sequences.
components: 82
randoop.util.Randomness: total calls to random: 398
randoop.util.Randomness: total calls to random: 399
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 400
randoop.util.Randomness: total calls to random: 401
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=84
-------------------------------------------
randoop.util.Randomness: total calls to random: 402
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 83 sequences.
components: 83
randoop.util.Randomness: total calls to random: 403
randoop.util.Randomness: total calls to random: 404
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 405
randoop.util.Randomness: total calls to random: 406
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=85
-------------------------------------------
randoop.util.Randomness: total calls to random: 407
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 71 sequences.
components: 71
randoop.util.Randomness: total calls to random: 408
randoop.util.Randomness: total calls to random: 409
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 410
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 84 sequences.
components: 84
randoop.util.Randomness: total calls to random: 411
randoop.util.Randomness: total calls to random: 412
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 413
randoop.util.Randomness: total calls to random: 414
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=86
-------------------------------------------
randoop.util.Randomness: total calls to random: 415
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 85 sequences.
components: 85
randoop.util.Randomness: total calls to random: 416
randoop.util.Randomness: total calls to random: 417
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 418
randoop.util.Randomness: total calls to random: 419
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 420
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 72 sequences.
components: 72
randoop.util.Randomness: total calls to random: 421
randoop.util.Randomness: total calls to random: 422
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=87
-------------------------------------------
randoop.util.Randomness: total calls to random: 423
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 86 sequences.
components: 86
randoop.util.Randomness: total calls to random: 424
randoop.util.Randomness: total calls to random: 425
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 426
randoop.util.Randomness: total calls to random: 427
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=88
-------------------------------------------
randoop.util.Randomness: total calls to random: 428
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 73 sequences.
components: 73
randoop.util.Randomness: total calls to random: 429
randoop.util.Randomness: total calls to random: 430
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 431
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 73 sequences.
components: 73
randoop.util.Randomness: total calls to random: 432
randoop.util.Randomness: total calls to random: 433
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=89
-------------------------------------------
randoop.util.Randomness: total calls to random: 434
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 88 sequences.
components: 88
randoop.util.Randomness: total calls to random: 435
randoop.util.Randomness: total calls to random: 436
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 437
randoop.util.Randomness: total calls to random: 438
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=90
-------------------------------------------
randoop.util.Randomness: total calls to random: 439
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 89 sequences.
components: 89
randoop.util.Randomness: total calls to random: 440
randoop.util.Randomness: total calls to random: 441
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 442
randoop.util.Randomness: total calls to random: 443
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=91
-------------------------------------------
randoop.util.Randomness: total calls to random: 444
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 76 sequences.
components: 76
randoop.util.Randomness: total calls to random: 445
randoop.util.Randomness: total calls to random: 446
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 447
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 90 sequences.
components: 90
randoop.util.Randomness: total calls to random: 448
randoop.util.Randomness: total calls to random: 449
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 450
randoop.util.Randomness: total calls to random: 451
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=92
-------------------------------------------
randoop.util.Randomness: total calls to random: 452
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 77 sequences.
components: 77
randoop.util.Randomness: total calls to random: 453
randoop.util.Randomness: total calls to random: 454
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 455
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 77 sequences.
components: 77
randoop.util.Randomness: total calls to random: 456
randoop.util.Randomness: total calls to random: 457
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 458
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 91 sequences.
components: 91
randoop.util.Randomness: total calls to random: 459
randoop.util.Randomness: total calls to random: 460
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 461
randoop.util.Randomness: total calls to random: 462
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=93
-------------------------------------------
randoop.util.Randomness: total calls to random: 463
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 92 sequences.
components: 92
randoop.util.Randomness: total calls to random: 464
randoop.util.Randomness: total calls to random: 465
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 466
randoop.util.Randomness: total calls to random: 467
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=94
-------------------------------------------
randoop.util.Randomness: total calls to random: 468
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 79 sequences.
components: 79
randoop.util.Randomness: total calls to random: 469
randoop.util.Randomness: total calls to random: 470
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 471
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 93 sequences.
components: 93
randoop.util.Randomness: total calls to random: 472
randoop.util.Randomness: total calls to random: 473
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 474
randoop.util.Randomness: total calls to random: 475
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 476
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 93 sequences.
components: 93
randoop.util.Randomness: total calls to random: 477
randoop.util.Randomness: total calls to random: 478
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 479
randoop.util.Randomness: total calls to random: 480
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:100 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=95
-------------------------------------------
randoop.util.Randomness: total calls to random: 481
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 79 sequences.
components: 79
randoop.util.Randomness: total calls to random: 482
randoop.util.Randomness: total calls to random: 483
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=96
-------------------------------------------
randoop.util.Randomness: total calls to random: 484
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 95 sequences.
components: 95
randoop.util.Randomness: total calls to random: 485
randoop.util.Randomness: total calls to random: 486
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 487
randoop.util.Randomness: total calls to random: 488
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true

allSequences.size()=97
-------------------------------------------
randoop.util.Randomness: total calls to random: 489
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 81 sequences.
components: 81
randoop.util.Randomness: total calls to random: 490
randoop.util.Randomness: total calls to random: 491
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 492
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 96 sequences.
components: 96
randoop.util.Randomness: total calls to random: 493
randoop.util.Randomness: total calls to random: 494
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 495
randoop.util.Randomness: total calls to random: 496
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:100 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=98
-------------------------------------------
randoop.util.Randomness: total calls to random: 497
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 97 sequences.
components: 97
randoop.util.Randomness: total calls to random: 498
randoop.util.Randomness: total calls to random: 499
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 500
randoop.util.Randomness: total calls to random: 501
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:-1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=99
-------------------------------------------
randoop.util.Randomness: total calls to random: 502
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 83 sequences.
components: 83
randoop.util.Randomness: total calls to random: 503
randoop.util.Randomness: total calls to random: 504
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=100
-------------------------------------------
randoop.util.Randomness: total calls to random: 505
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 84 sequences.
components: 84
randoop.util.Randomness: total calls to random: 506
randoop.util.Randomness: total calls to random: 507
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 508
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 99 sequences.
components: 99
randoop.util.Randomness: total calls to random: 509
randoop.util.Randomness: total calls to random: 510
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 511
randoop.util.Randomness: total calls to random: 512
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  prim : long:10 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=101
-------------------------------------------
randoop.util.Randomness: total calls to random: 513
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 85 sequences.
components: 85
randoop.util.Randomness: total calls to random: 514
randoop.util.Randomness: total calls to random: 515
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=102
-------------------------------------------
randoop.util.Randomness: total calls to random: 516
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 86 sequences.
components: 86
randoop.util.Randomness: total calls to random: 517
randoop.util.Randomness: total calls to random: 518
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 519
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 86 sequences.
components: 86
randoop.util.Randomness: total calls to random: 520
randoop.util.Randomness: total calls to random: 521
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=103
-------------------------------------------
randoop.util.Randomness: total calls to random: 522
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 102 sequences.
components: 102
randoop.util.Randomness: total calls to random: 523
randoop.util.Randomness: total calls to random: 524
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 525
randoop.util.Randomness: total calls to random: 526
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:10 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=104
-------------------------------------------
randoop.util.Randomness: total calls to random: 527
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 88 sequences.
components: 88
randoop.util.Randomness: total calls to random: 528
randoop.util.Randomness: total calls to random: 529
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=105
-------------------------------------------
randoop.util.Randomness: total calls to random: 530
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 89 sequences.
components: 89
randoop.util.Randomness: total calls to random: 531
randoop.util.Randomness: total calls to random: 532
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=106
-------------------------------------------
randoop.util.Randomness: total calls to random: 533
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 90 sequences.
components: 90
randoop.util.Randomness: total calls to random: 534
randoop.util.Randomness: total calls to random: 535
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=107
-------------------------------------------
randoop.util.Randomness: total calls to random: 536
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 91 sequences.
components: 91
randoop.util.Randomness: total calls to random: 537
randoop.util.Randomness: total calls to random: 538
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=108
-------------------------------------------
randoop.util.Randomness: total calls to random: 539
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 92 sequences.
components: 92
randoop.util.Randomness: total calls to random: 540
randoop.util.Randomness: total calls to random: 541
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:10 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=109
-------------------------------------------
randoop.util.Randomness: total calls to random: 542
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 108 sequences.
components: 108
randoop.util.Randomness: total calls to random: 543
randoop.util.Randomness: total calls to random: 544
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 545
randoop.util.Randomness: total calls to random: 546
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true

allSequences.size()=110
-------------------------------------------
randoop.util.Randomness: total calls to random: 547
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 94 sequences.
components: 94
randoop.util.Randomness: total calls to random: 548
randoop.util.Randomness: total calls to random: 549
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 550
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 94 sequences.
components: 94
randoop.util.Randomness: total calls to random: 551
randoop.util.Randomness: total calls to random: 552
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=111
-------------------------------------------
randoop.util.Randomness: total calls to random: 553
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 110 sequences.
components: 110
randoop.util.Randomness: total calls to random: 554
randoop.util.Randomness: total calls to random: 555
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 556
randoop.util.Randomness: total calls to random: 557
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=112
-------------------------------------------
randoop.util.Randomness: total calls to random: 558
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 111 sequences.
components: 111
randoop.util.Randomness: total calls to random: 559
randoop.util.Randomness: total calls to random: 560
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 561
randoop.util.Randomness: total calls to random: 562
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=113
-------------------------------------------
randoop.util.Randomness: total calls to random: 563
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 97 sequences.
components: 97
randoop.util.Randomness: total calls to random: 564
randoop.util.Randomness: total calls to random: 565
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=114
-------------------------------------------
randoop.util.Randomness: total calls to random: 566
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 113 sequences.
components: 113
randoop.util.Randomness: total calls to random: 567
randoop.util.Randomness: total calls to random: 568
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 569
randoop.util.Randomness: total calls to random: 570
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=115
-------------------------------------------
randoop.util.Randomness: total calls to random: 571
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 114 sequences.
components: 114
randoop.util.Randomness: total calls to random: 572
randoop.util.Randomness: total calls to random: 573
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 574
randoop.util.Randomness: total calls to random: 575
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=116
-------------------------------------------
randoop.util.Randomness: total calls to random: 576
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 100 sequences.
components: 100
randoop.util.Randomness: total calls to random: 577
randoop.util.Randomness: total calls to random: 578
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=117
-------------------------------------------
randoop.util.Randomness: total calls to random: 579
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 101 sequences.
components: 101
randoop.util.Randomness: total calls to random: 580
randoop.util.Randomness: total calls to random: 581
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=118
-------------------------------------------
randoop.util.Randomness: total calls to random: 582
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 102 sequences.
components: 102
randoop.util.Randomness: total calls to random: 583
randoop.util.Randomness: total calls to random: 584
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 585
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 117 sequences.
components: 117
randoop.util.Randomness: total calls to random: 586
randoop.util.Randomness: total calls to random: 587
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 588
randoop.util.Randomness: total calls to random: 589
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:10 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=119
-------------------------------------------
randoop.util.Randomness: total calls to random: 590
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 118 sequences.
components: 118
randoop.util.Randomness: total calls to random: 591
randoop.util.Randomness: total calls to random: 592
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 593
randoop.util.Randomness: total calls to random: 594
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=120
-------------------------------------------
randoop.util.Randomness: total calls to random: 595
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 119 sequences.
components: 119
randoop.util.Randomness: total calls to random: 596
randoop.util.Randomness: total calls to random: 597
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 598
randoop.util.Randomness: total calls to random: 599
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=121
-------------------------------------------
randoop.util.Randomness: total calls to random: 600
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 105 sequences.
components: 105
randoop.util.Randomness: total calls to random: 601
randoop.util.Randomness: total calls to random: 602
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=122
-------------------------------------------
randoop.util.Randomness: total calls to random: 603
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 106 sequences.
components: 106
randoop.util.Randomness: total calls to random: 604
randoop.util.Randomness: total calls to random: 605
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=123
-------------------------------------------
randoop.util.Randomness: total calls to random: 606
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 107 sequences.
components: 107
randoop.util.Randomness: total calls to random: 607
randoop.util.Randomness: total calls to random: 608
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 609
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 107 sequences.
components: 107
randoop.util.Randomness: total calls to random: 610
randoop.util.Randomness: total calls to random: 611
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=124
-------------------------------------------
randoop.util.Randomness: total calls to random: 612
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 108 sequences.
components: 108
randoop.util.Randomness: total calls to random: 613
randoop.util.Randomness: total calls to random: 614
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=125
-------------------------------------------
randoop.util.Randomness: total calls to random: 615
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 109 sequences.
components: 109
randoop.util.Randomness: total calls to random: 616
randoop.util.Randomness: total calls to random: 617
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=126
-------------------------------------------
randoop.util.Randomness: total calls to random: 618
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 110 sequences.
components: 110
randoop.util.Randomness: total calls to random: 619
randoop.util.Randomness: total calls to random: 620
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=127
-------------------------------------------
randoop.util.Randomness: total calls to random: 621
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 111 sequences.
components: 111
randoop.util.Randomness: total calls to random: 622
randoop.util.Randomness: total calls to random: 623
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=128
-------------------------------------------
randoop.util.Randomness: total calls to random: 624
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 112 sequences.
components: 112
randoop.util.Randomness: total calls to random: 625
randoop.util.Randomness: total calls to random: 626
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=129
-------------------------------------------
randoop.util.Randomness: total calls to random: 627
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 113 sequences.
components: 113
randoop.util.Randomness: total calls to random: 628
randoop.util.Randomness: total calls to random: 629
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:0 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=130
-------------------------------------------
randoop.util.Randomness: total calls to random: 630
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 114 sequences.
components: 114
randoop.util.Randomness: total calls to random: 631
randoop.util.Randomness: total calls to random: 632
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=131
-------------------------------------------
randoop.util.Randomness: total calls to random: 633
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 130 sequences.
components: 130
randoop.util.Randomness: total calls to random: 634
randoop.util.Randomness: total calls to random: 635
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 636
randoop.util.Randomness: total calls to random: 637
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true

allSequences.size()=132
-------------------------------------------
randoop.util.Randomness: total calls to random: 638
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 116 sequences.
components: 116
randoop.util.Randomness: total calls to random: 639
randoop.util.Randomness: total calls to random: 640
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=133
-------------------------------------------
randoop.util.Randomness: total calls to random: 641
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 117 sequences.
components: 117
randoop.util.Randomness: total calls to random: 642
randoop.util.Randomness: total calls to random: 643
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=134
-------------------------------------------
randoop.util.Randomness: total calls to random: 644
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 133 sequences.
components: 133
randoop.util.Randomness: total calls to random: 645
randoop.util.Randomness: total calls to random: 646
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 647
randoop.util.Randomness: total calls to random: 648
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=135
-------------------------------------------
randoop.util.Randomness: total calls to random: 649
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 119 sequences.
components: 119
randoop.util.Randomness: total calls to random: 650
randoop.util.Randomness: total calls to random: 651
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=136
-------------------------------------------
randoop.util.Randomness: total calls to random: 652
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 120 sequences.
components: 120
randoop.util.Randomness: total calls to random: 653
randoop.util.Randomness: total calls to random: 654
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=137
-------------------------------------------
randoop.util.Randomness: total calls to random: 655
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 121 sequences.
components: 121
randoop.util.Randomness: total calls to random: 656
randoop.util.Randomness: total calls to random: 657
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=138
-------------------------------------------
randoop.util.Randomness: total calls to random: 658
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 137 sequences.
components: 137
randoop.util.Randomness: total calls to random: 659
randoop.util.Randomness: total calls to random: 660
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 661
randoop.util.Randomness: total calls to random: 662
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=139
-------------------------------------------
randoop.util.Randomness: total calls to random: 663
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 138 sequences.
components: 138
randoop.util.Randomness: total calls to random: 664
randoop.util.Randomness: total calls to random: 665
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 666
randoop.util.Randomness: total calls to random: 667
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:100 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:0 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=140
-------------------------------------------
randoop.util.Randomness: total calls to random: 668
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 139 sequences.
components: 139
randoop.util.Randomness: total calls to random: 669
randoop.util.Randomness: total calls to random: 670
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 671
randoop.util.Randomness: total calls to random: 672
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:10 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=141
-------------------------------------------
randoop.util.Randomness: total calls to random: 673
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 124 sequences.
components: 124
randoop.util.Randomness: total calls to random: 674
randoop.util.Randomness: total calls to random: 675
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=142
-------------------------------------------
randoop.util.Randomness: total calls to random: 676
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 125 sequences.
components: 125
randoop.util.Randomness: total calls to random: 677
randoop.util.Randomness: total calls to random: 678
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 679
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 125 sequences.
components: 125
randoop.util.Randomness: total calls to random: 680
randoop.util.Randomness: total calls to random: 681
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:10 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 
var17 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=143
-------------------------------------------
randoop.util.Randomness: total calls to random: 682
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 142 sequences.
components: 142
randoop.util.Randomness: total calls to random: 683
randoop.util.Randomness: total calls to random: 684
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 685
randoop.util.Randomness: total calls to random: 686
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:100 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  prim : long:100 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true

allSequences.size()=144
-------------------------------------------
randoop.util.Randomness: total calls to random: 687
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 127 sequences.
components: 127
randoop.util.Randomness: total calls to random: 688
randoop.util.Randomness: total calls to random: 689
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=145
-------------------------------------------
randoop.util.Randomness: total calls to random: 690
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 144 sequences.
components: 144
randoop.util.Randomness: total calls to random: 691
randoop.util.Randomness: total calls to random: 692
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 693
randoop.util.Randomness: total calls to random: 694
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  prim : long:0 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true

allSequences.size()=146
-------------------------------------------
randoop.util.Randomness: total calls to random: 695
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 129 sequences.
components: 129
randoop.util.Randomness: total calls to random: 696
randoop.util.Randomness: total calls to random: 697
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=147
-------------------------------------------
randoop.util.Randomness: total calls to random: 698
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 130 sequences.
components: 130
randoop.util.Randomness: total calls to random: 699
randoop.util.Randomness: total calls to random: 700
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 701
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 130 sequences.
components: 130
randoop.util.Randomness: total calls to random: 702
randoop.util.Randomness: total calls to random: 703
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=148
-------------------------------------------
randoop.util.Randomness: total calls to random: 704
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 147 sequences.
components: 147
randoop.util.Randomness: total calls to random: 705
randoop.util.Randomness: total calls to random: 706
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 707
randoop.util.Randomness: total calls to random: 708
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=149
-------------------------------------------
randoop.util.Randomness: total calls to random: 709
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 132 sequences.
components: 132
randoop.util.Randomness: total calls to random: 710
randoop.util.Randomness: total calls to random: 711
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=150
-------------------------------------------
randoop.util.Randomness: total calls to random: 712
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 133 sequences.
components: 133
randoop.util.Randomness: total calls to random: 713
randoop.util.Randomness: total calls to random: 714
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 715
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 716
randoop.util.Randomness: total calls to random: 717
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 718
randoop.util.Randomness: total calls to random: 719
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:100 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=151
-------------------------------------------
randoop.util.Randomness: total calls to random: 720
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 134 sequences.
components: 134
randoop.util.Randomness: total calls to random: 721
randoop.util.Randomness: total calls to random: 722
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=152
-------------------------------------------
randoop.util.Randomness: total calls to random: 723
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 135 sequences.
components: 135
randoop.util.Randomness: total calls to random: 724
randoop.util.Randomness: total calls to random: 725
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=153
-------------------------------------------
randoop.util.Randomness: total calls to random: 726
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 136 sequences.
components: 136
randoop.util.Randomness: total calls to random: 727
randoop.util.Randomness: total calls to random: 728
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=154
-------------------------------------------
randoop.util.Randomness: total calls to random: 729
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 153 sequences.
components: 153
randoop.util.Randomness: total calls to random: 730
randoop.util.Randomness: total calls to random: 731
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 732
randoop.util.Randomness: total calls to random: 733
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=155
-------------------------------------------
randoop.util.Randomness: total calls to random: 734
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 138 sequences.
components: 138
randoop.util.Randomness: total calls to random: 735
randoop.util.Randomness: total calls to random: 736
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=156
-------------------------------------------
randoop.util.Randomness: total calls to random: 737
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 155 sequences.
components: 155
randoop.util.Randomness: total calls to random: 738
randoop.util.Randomness: total calls to random: 739
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 740
randoop.util.Randomness: total calls to random: 741
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 742
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 139 sequences.
components: 139
randoop.util.Randomness: total calls to random: 743
randoop.util.Randomness: total calls to random: 744
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 745
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 155 sequences.
components: 155
randoop.util.Randomness: total calls to random: 746
randoop.util.Randomness: total calls to random: 747
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 748
randoop.util.Randomness: total calls to random: 749
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:10 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 
var17 =  method : Package_1.ClassId_0.m_0() : var0 
var18 =  prim : long:0 : 
var19 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var18 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var18 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=0 [var19]  : true

allSequences.size()=157
-------------------------------------------
randoop.util.Randomness: total calls to random: 750
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 751
randoop.util.Randomness: total calls to random: 752
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 753
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 754
randoop.util.Randomness: total calls to random: 755
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 756
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 757
randoop.util.Randomness: total calls to random: 758
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 759
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 760
randoop.util.Randomness: total calls to random: 761
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 762
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 140 sequences.
components: 140
randoop.util.Randomness: total calls to random: 763
randoop.util.Randomness: total calls to random: 764
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=158
-------------------------------------------
randoop.util.Randomness: total calls to random: 765
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 141 sequences.
components: 141
randoop.util.Randomness: total calls to random: 766
randoop.util.Randomness: total calls to random: 767
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=159
-------------------------------------------
randoop.util.Randomness: total calls to random: 768
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 142 sequences.
components: 142
randoop.util.Randomness: total calls to random: 769
randoop.util.Randomness: total calls to random: 770
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=160
-------------------------------------------
randoop.util.Randomness: total calls to random: 771
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 143 sequences.
components: 143
randoop.util.Randomness: total calls to random: 772
randoop.util.Randomness: total calls to random: 773
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=161
-------------------------------------------
randoop.util.Randomness: total calls to random: 774
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 144 sequences.
components: 144
randoop.util.Randomness: total calls to random: 775
randoop.util.Randomness: total calls to random: 776
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:10 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 
var17 =  method : Package_1.ClassId_0.m_0() : var0 
var18 =  prim : long:0 : 
var19 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var18 
var20 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var18 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=0 [var19]  : true
<randoop.PrimValue, value=1 [var20]  : true

allSequences.size()=162
-------------------------------------------
randoop.util.Randomness: total calls to random: 777
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 145 sequences.
components: 145
randoop.util.Randomness: total calls to random: 778
randoop.util.Randomness: total calls to random: 779
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 780
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 145 sequences.
components: 145
randoop.util.Randomness: total calls to random: 781
randoop.util.Randomness: total calls to random: 782
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=163
-------------------------------------------
randoop.util.Randomness: total calls to random: 783
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 146 sequences.
components: 146
randoop.util.Randomness: total calls to random: 784
randoop.util.Randomness: total calls to random: 785
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=164
-------------------------------------------
randoop.util.Randomness: total calls to random: 786
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 163 sequences.
components: 163
randoop.util.Randomness: total calls to random: 787
randoop.util.Randomness: total calls to random: 788
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 789
randoop.util.Randomness: total calls to random: 790
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=165
-------------------------------------------
randoop.util.Randomness: total calls to random: 791
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 148 sequences.
components: 148
randoop.util.Randomness: total calls to random: 792
randoop.util.Randomness: total calls to random: 793
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=166
-------------------------------------------
randoop.util.Randomness: total calls to random: 794
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 149 sequences.
components: 149
randoop.util.Randomness: total calls to random: 795
randoop.util.Randomness: total calls to random: 796
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=167
-------------------------------------------
randoop.util.Randomness: total calls to random: 797
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 166 sequences.
components: 166
randoop.util.Randomness: total calls to random: 798
randoop.util.Randomness: total calls to random: 799
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 800
randoop.util.Randomness: total calls to random: 801
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:-1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=168
-------------------------------------------
randoop.util.Randomness: total calls to random: 802
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 167 sequences.
components: 167
randoop.util.Randomness: total calls to random: 803
randoop.util.Randomness: total calls to random: 804
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 805
randoop.util.Randomness: total calls to random: 806
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  prim : long:0 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true

allSequences.size()=169
-------------------------------------------
randoop.util.Randomness: total calls to random: 807
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 168 sequences.
components: 168
randoop.util.Randomness: total calls to random: 808
randoop.util.Randomness: total calls to random: 809
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 810
randoop.util.Randomness: total calls to random: 811
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=170
-------------------------------------------
randoop.util.Randomness: total calls to random: 812
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 153 sequences.
components: 153
randoop.util.Randomness: total calls to random: 813
randoop.util.Randomness: total calls to random: 814
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=171
-------------------------------------------
randoop.util.Randomness: total calls to random: 815
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 154 sequences.
components: 154
randoop.util.Randomness: total calls to random: 816
randoop.util.Randomness: total calls to random: 817
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=172
-------------------------------------------
randoop.util.Randomness: total calls to random: 818
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 171 sequences.
components: 171
randoop.util.Randomness: total calls to random: 819
randoop.util.Randomness: total calls to random: 820
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 821
randoop.util.Randomness: total calls to random: 822
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 823
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 171 sequences.
components: 171
randoop.util.Randomness: total calls to random: 824
randoop.util.Randomness: total calls to random: 825
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 826
randoop.util.Randomness: total calls to random: 827
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=173
-------------------------------------------
randoop.util.Randomness: total calls to random: 828
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 156 sequences.
components: 156
randoop.util.Randomness: total calls to random: 829
randoop.util.Randomness: total calls to random: 830
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=174
-------------------------------------------
randoop.util.Randomness: total calls to random: 831
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 173 sequences.
components: 173
randoop.util.Randomness: total calls to random: 832
randoop.util.Randomness: total calls to random: 833
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 834
randoop.util.Randomness: total calls to random: 835
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  prim : long:0 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=175
-------------------------------------------
randoop.util.Randomness: total calls to random: 836
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 158 sequences.
components: 158
randoop.util.Randomness: total calls to random: 837
randoop.util.Randomness: total calls to random: 838
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=176
-------------------------------------------
randoop.util.Randomness: total calls to random: 839
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 175 sequences.
components: 175
randoop.util.Randomness: total calls to random: 840
randoop.util.Randomness: total calls to random: 841
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 842
randoop.util.Randomness: total calls to random: 843
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 844
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 159 sequences.
components: 159
randoop.util.Randomness: total calls to random: 845
randoop.util.Randomness: total calls to random: 846
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:100 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=177
-------------------------------------------
randoop.util.Randomness: total calls to random: 847
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 176 sequences.
components: 176
randoop.util.Randomness: total calls to random: 848
randoop.util.Randomness: total calls to random: 849
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 850
randoop.util.Randomness: total calls to random: 851
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:100 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=178
-------------------------------------------
randoop.util.Randomness: total calls to random: 852
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 161 sequences.
components: 161
randoop.util.Randomness: total calls to random: 853
randoop.util.Randomness: total calls to random: 854
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 855
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 177 sequences.
components: 177
randoop.util.Randomness: total calls to random: 856
randoop.util.Randomness: total calls to random: 857
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 858
randoop.util.Randomness: total calls to random: 859
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 860
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 161 sequences.
components: 161
randoop.util.Randomness: total calls to random: 861
randoop.util.Randomness: total calls to random: 862
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=179
-------------------------------------------
randoop.util.Randomness: total calls to random: 863
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 178 sequences.
components: 178
randoop.util.Randomness: total calls to random: 864
randoop.util.Randomness: total calls to random: 865
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 866
randoop.util.Randomness: total calls to random: 867
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:-1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=180
-------------------------------------------
randoop.util.Randomness: total calls to random: 868
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 179 sequences.
components: 179
randoop.util.Randomness: total calls to random: 869
randoop.util.Randomness: total calls to random: 870
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 871
randoop.util.Randomness: total calls to random: 872
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=181
-------------------------------------------
randoop.util.Randomness: total calls to random: 873
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 180 sequences.
components: 180
randoop.util.Randomness: total calls to random: 874
randoop.util.Randomness: total calls to random: 875
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 876
randoop.util.Randomness: total calls to random: 877
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 
var14 =  prim : long:100 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=182
-------------------------------------------
randoop.util.Randomness: total calls to random: 878
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 181 sequences.
components: 181
randoop.util.Randomness: total calls to random: 879
randoop.util.Randomness: total calls to random: 880
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 881
randoop.util.Randomness: total calls to random: 882
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:10 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=183
-------------------------------------------
randoop.util.Randomness: total calls to random: 883
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 182 sequences.
components: 182
randoop.util.Randomness: total calls to random: 884
randoop.util.Randomness: total calls to random: 885
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 886
randoop.util.Randomness: total calls to random: 887
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:100 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=184
-------------------------------------------
randoop.util.Randomness: total calls to random: 888
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 889
randoop.util.Randomness: total calls to random: 890
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 891
randoop.util.Randomness: total calls to random: 892
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:-1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=185
-------------------------------------------
randoop.util.Randomness: total calls to random: 893
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 184 sequences.
components: 184
randoop.util.Randomness: total calls to random: 894
randoop.util.Randomness: total calls to random: 895
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 896
randoop.util.Randomness: total calls to random: 897
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=186
-------------------------------------------
randoop.util.Randomness: total calls to random: 898
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 185 sequences.
components: 185
randoop.util.Randomness: total calls to random: 899
randoop.util.Randomness: total calls to random: 900
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 901
randoop.util.Randomness: total calls to random: 902
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=187
-------------------------------------------
randoop.util.Randomness: total calls to random: 903
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 169 sequences.
components: 169
randoop.util.Randomness: total calls to random: 904
randoop.util.Randomness: total calls to random: 905
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=188
-------------------------------------------
randoop.util.Randomness: total calls to random: 906
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 170 sequences.
components: 170
randoop.util.Randomness: total calls to random: 907
randoop.util.Randomness: total calls to random: 908
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=189
-------------------------------------------
randoop.util.Randomness: total calls to random: 909
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 171 sequences.
components: 171
randoop.util.Randomness: total calls to random: 910
randoop.util.Randomness: total calls to random: 911
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=190
-------------------------------------------
randoop.util.Randomness: total calls to random: 912
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 172 sequences.
components: 172
randoop.util.Randomness: total calls to random: 913
randoop.util.Randomness: total calls to random: 914
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=191
-------------------------------------------
randoop.util.Randomness: total calls to random: 915
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 190 sequences.
components: 190
randoop.util.Randomness: total calls to random: 916
randoop.util.Randomness: total calls to random: 917
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 918
randoop.util.Randomness: total calls to random: 919
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  prim : long:10 : 
var3 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var2 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var2 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=0 [var3]  : true

allSequences.size()=192
-------------------------------------------
randoop.util.Randomness: total calls to random: 920
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 191 sequences.
components: 191
randoop.util.Randomness: total calls to random: 921
randoop.util.Randomness: total calls to random: 922
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 923
randoop.util.Randomness: total calls to random: 924
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  prim : long:0 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=193
-------------------------------------------
randoop.util.Randomness: total calls to random: 925
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 175 sequences.
components: 175
randoop.util.Randomness: total calls to random: 926
randoop.util.Randomness: total calls to random: 927
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=194
-------------------------------------------
randoop.util.Randomness: total calls to random: 928
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 193 sequences.
components: 193
randoop.util.Randomness: total calls to random: 929
randoop.util.Randomness: total calls to random: 930
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 931
randoop.util.Randomness: total calls to random: 932
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  prim : long:10 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true

allSequences.size()=195
-------------------------------------------
randoop.util.Randomness: total calls to random: 933
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 177 sequences.
components: 177
randoop.util.Randomness: total calls to random: 934
randoop.util.Randomness: total calls to random: 935
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=196
-------------------------------------------
randoop.util.Randomness: total calls to random: 936
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 195 sequences.
components: 195
randoop.util.Randomness: total calls to random: 937
randoop.util.Randomness: total calls to random: 938
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 939
randoop.util.Randomness: total calls to random: 940
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:10 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 
var17 =  method : Package_1.ClassId_0.m_0() : var0 
var18 =  prim : long:1 : 
var19 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var18 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var18 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true
<randoop.PrimValue, value=0 [var19]  : true

allSequences.size()=197
-------------------------------------------
randoop.util.Randomness: total calls to random: 941
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 179 sequences.
components: 179
randoop.util.Randomness: total calls to random: 942
randoop.util.Randomness: total calls to random: 943
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=198
-------------------------------------------
randoop.util.Randomness: total calls to random: 944
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 197 sequences.
components: 197
randoop.util.Randomness: total calls to random: 945
randoop.util.Randomness: total calls to random: 946
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 947
randoop.util.Randomness: total calls to random: 948
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:100 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:10 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=199
-------------------------------------------
randoop.util.Randomness: total calls to random: 949
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 180 sequences.
components: 180
randoop.util.Randomness: total calls to random: 950
randoop.util.Randomness: total calls to random: 951
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=200
-------------------------------------------
randoop.util.Randomness: total calls to random: 952
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 181 sequences.
components: 181
randoop.util.Randomness: total calls to random: 953
randoop.util.Randomness: total calls to random: 954
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=201
-------------------------------------------
randoop.util.Randomness: total calls to random: 955
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 182 sequences.
components: 182
randoop.util.Randomness: total calls to random: 956
randoop.util.Randomness: total calls to random: 957
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=202
-------------------------------------------
randoop.util.Randomness: total calls to random: 958
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 959
randoop.util.Randomness: total calls to random: 960
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 961
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 183 sequences.
components: 183
randoop.util.Randomness: total calls to random: 962
randoop.util.Randomness: total calls to random: 963
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 964
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 201 sequences.
components: 201
randoop.util.Randomness: total calls to random: 965
randoop.util.Randomness: total calls to random: 966
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 967
randoop.util.Randomness: total calls to random: 968
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=203
-------------------------------------------
randoop.util.Randomness: total calls to random: 969
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 202 sequences.
components: 202
randoop.util.Randomness: total calls to random: 970
randoop.util.Randomness: total calls to random: 971
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 972
randoop.util.Randomness: total calls to random: 973
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:0 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=204
-------------------------------------------
randoop.util.Randomness: total calls to random: 974
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 185 sequences.
components: 185
randoop.util.Randomness: total calls to random: 975
randoop.util.Randomness: total calls to random: 976
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=205
-------------------------------------------
randoop.util.Randomness: total calls to random: 977
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 204 sequences.
components: 204
randoop.util.Randomness: total calls to random: 978
randoop.util.Randomness: total calls to random: 979
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 980
randoop.util.Randomness: total calls to random: 981
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:-1 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=206
-------------------------------------------
randoop.util.Randomness: total calls to random: 982
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 187 sequences.
components: 187
randoop.util.Randomness: total calls to random: 983
randoop.util.Randomness: total calls to random: 984
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=207
-------------------------------------------
randoop.util.Randomness: total calls to random: 985
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 206 sequences.
components: 206
randoop.util.Randomness: total calls to random: 986
randoop.util.Randomness: total calls to random: 987
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 988
randoop.util.Randomness: total calls to random: 989
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:0 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true

allSequences.size()=208
-------------------------------------------
randoop.util.Randomness: total calls to random: 990
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 189 sequences.
components: 189
randoop.util.Randomness: total calls to random: 991
randoop.util.Randomness: total calls to random: 992
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=209
-------------------------------------------
randoop.util.Randomness: total calls to random: 993
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 190 sequences.
components: 190
randoop.util.Randomness: total calls to random: 994
randoop.util.Randomness: total calls to random: 995
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=210
-------------------------------------------
randoop.util.Randomness: total calls to random: 996
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 191 sequences.
components: 191
randoop.util.Randomness: total calls to random: 997
randoop.util.Randomness: total calls to random: 998
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 999
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 191 sequences.
components: 191
randoop.util.Randomness: total calls to random: 1000
randoop.util.Randomness: total calls to random: 1001
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  prim : long:0 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 
var18 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=211
-------------------------------------------
randoop.util.Randomness: total calls to random: 1002
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 192 sequences.
components: 192
randoop.util.Randomness: total calls to random: 1003
randoop.util.Randomness: total calls to random: 1004
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=212
-------------------------------------------
randoop.util.Randomness: total calls to random: 1005
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 193 sequences.
components: 193
randoop.util.Randomness: total calls to random: 1006
randoop.util.Randomness: total calls to random: 1007
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=213
-------------------------------------------
randoop.util.Randomness: total calls to random: 1008
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 212 sequences.
components: 212
randoop.util.Randomness: total calls to random: 1009
randoop.util.Randomness: total calls to random: 1010
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1011
randoop.util.Randomness: total calls to random: 1012
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:-1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=214
-------------------------------------------
randoop.util.Randomness: total calls to random: 1013
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 213 sequences.
components: 213
randoop.util.Randomness: total calls to random: 1014
randoop.util.Randomness: total calls to random: 1015
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1016
randoop.util.Randomness: total calls to random: 1017
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=215
-------------------------------------------
randoop.util.Randomness: total calls to random: 1018
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 195 sequences.
components: 195
randoop.util.Randomness: total calls to random: 1019
randoop.util.Randomness: total calls to random: 1020
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=216
-------------------------------------------
randoop.util.Randomness: total calls to random: 1021
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 196 sequences.
components: 196
randoop.util.Randomness: total calls to random: 1022
randoop.util.Randomness: total calls to random: 1023
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=217
-------------------------------------------
randoop.util.Randomness: total calls to random: 1024
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 216 sequences.
components: 216
randoop.util.Randomness: total calls to random: 1025
randoop.util.Randomness: total calls to random: 1026
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1027
randoop.util.Randomness: total calls to random: 1028
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=218
-------------------------------------------
randoop.util.Randomness: total calls to random: 1029
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 217 sequences.
components: 217
randoop.util.Randomness: total calls to random: 1030
randoop.util.Randomness: total calls to random: 1031
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1032
randoop.util.Randomness: total calls to random: 1033
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=219
-------------------------------------------
randoop.util.Randomness: total calls to random: 1034
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 199 sequences.
components: 199
randoop.util.Randomness: total calls to random: 1035
randoop.util.Randomness: total calls to random: 1036
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:0 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=220
-------------------------------------------
randoop.util.Randomness: total calls to random: 1037
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 200 sequences.
components: 200
randoop.util.Randomness: total calls to random: 1038
randoop.util.Randomness: total calls to random: 1039
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=221
-------------------------------------------
randoop.util.Randomness: total calls to random: 1040
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 201 sequences.
components: 201
randoop.util.Randomness: total calls to random: 1041
randoop.util.Randomness: total calls to random: 1042
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1043
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 201 sequences.
components: 201
randoop.util.Randomness: total calls to random: 1044
randoop.util.Randomness: total calls to random: 1045
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=222
-------------------------------------------
randoop.util.Randomness: total calls to random: 1046
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 202 sequences.
components: 202
randoop.util.Randomness: total calls to random: 1047
randoop.util.Randomness: total calls to random: 1048
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=223
-------------------------------------------
randoop.util.Randomness: total calls to random: 1049
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 222 sequences.
components: 222
randoop.util.Randomness: total calls to random: 1050
randoop.util.Randomness: total calls to random: 1051
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1052
randoop.util.Randomness: total calls to random: 1053
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:-1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=224
-------------------------------------------
randoop.util.Randomness: total calls to random: 1054
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 204 sequences.
components: 204
randoop.util.Randomness: total calls to random: 1055
randoop.util.Randomness: total calls to random: 1056
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=225
-------------------------------------------
randoop.util.Randomness: total calls to random: 1057
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 224 sequences.
components: 224
randoop.util.Randomness: total calls to random: 1058
randoop.util.Randomness: total calls to random: 1059
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1060
randoop.util.Randomness: total calls to random: 1061
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=226
-------------------------------------------
randoop.util.Randomness: total calls to random: 1062
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 206 sequences.
components: 206
randoop.util.Randomness: total calls to random: 1063
randoop.util.Randomness: total calls to random: 1064
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  prim : long:0 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=227
-------------------------------------------
randoop.util.Randomness: total calls to random: 1065
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 207 sequences.
components: 207
randoop.util.Randomness: total calls to random: 1066
randoop.util.Randomness: total calls to random: 1067
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=228
-------------------------------------------
randoop.util.Randomness: total calls to random: 1068
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 208 sequences.
components: 208
randoop.util.Randomness: total calls to random: 1069
randoop.util.Randomness: total calls to random: 1070
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=229
-------------------------------------------
randoop.util.Randomness: total calls to random: 1071
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 209 sequences.
components: 209
randoop.util.Randomness: total calls to random: 1072
randoop.util.Randomness: total calls to random: 1073
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=230
-------------------------------------------
randoop.util.Randomness: total calls to random: 1074
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 210 sequences.
components: 210
randoop.util.Randomness: total calls to random: 1075
randoop.util.Randomness: total calls to random: 1076
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:-1 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 
var17 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=231
-------------------------------------------
randoop.util.Randomness: total calls to random: 1077
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1078
randoop.util.Randomness: total calls to random: 1079
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1080
randoop.util.Randomness: total calls to random: 1081
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_0.<init>() : 
var1 =  prim : long:-1 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:100 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_0
Sequence after execution: 
Package_1.ClassId_0 var0 = new Package_1.ClassId_0();
// <NormalExecution object=object-of-type-Package_1.ClassId_0>;
java.lang.Long var1 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true

allSequences.size()=232
-------------------------------------------
randoop.util.Randomness: total calls to random: 1082
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 231 sequences.
components: 231
randoop.util.Randomness: total calls to random: 1083
randoop.util.Randomness: total calls to random: 1084
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1085
randoop.util.Randomness: total calls to random: 1086
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:10 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true

allSequences.size()=233
-------------------------------------------
randoop.util.Randomness: total calls to random: 1087
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 212 sequences.
components: 212
randoop.util.Randomness: total calls to random: 1088
randoop.util.Randomness: total calls to random: 1089
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:10 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=234
-------------------------------------------
randoop.util.Randomness: total calls to random: 1090
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 213 sequences.
components: 213
randoop.util.Randomness: total calls to random: 1091
randoop.util.Randomness: total calls to random: 1092
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1093
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 233 sequences.
components: 233
randoop.util.Randomness: total calls to random: 1094
randoop.util.Randomness: total calls to random: 1095
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1096
randoop.util.Randomness: total calls to random: 1097
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1098
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 213 sequences.
components: 213
randoop.util.Randomness: total calls to random: 1099
randoop.util.Randomness: total calls to random: 1100
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1101
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 213 sequences.
components: 213
randoop.util.Randomness: total calls to random: 1102
randoop.util.Randomness: total calls to random: 1103
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=235
-------------------------------------------
randoop.util.Randomness: total calls to random: 1104
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 214 sequences.
components: 214
randoop.util.Randomness: total calls to random: 1105
randoop.util.Randomness: total calls to random: 1106
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=236
-------------------------------------------
randoop.util.Randomness: total calls to random: 1107
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 215 sequences.
components: 215
randoop.util.Randomness: total calls to random: 1108
randoop.util.Randomness: total calls to random: 1109
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=237
-------------------------------------------
randoop.util.Randomness: total calls to random: 1110
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 236 sequences.
components: 236
randoop.util.Randomness: total calls to random: 1111
randoop.util.Randomness: total calls to random: 1112
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1113
randoop.util.Randomness: total calls to random: 1114
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=238
-------------------------------------------
randoop.util.Randomness: total calls to random: 1115
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 237 sequences.
components: 237
randoop.util.Randomness: total calls to random: 1116
randoop.util.Randomness: total calls to random: 1117
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1118
randoop.util.Randomness: total calls to random: 1119
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_1.ClassId_0.m_0() : var0 
var17 =  prim : long:1 : 
var18 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var17 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=239
-------------------------------------------
randoop.util.Randomness: total calls to random: 1120
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 218 sequences.
components: 218
randoop.util.Randomness: total calls to random: 1121
randoop.util.Randomness: total calls to random: 1122
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=240
-------------------------------------------
randoop.util.Randomness: total calls to random: 1123
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 239 sequences.
components: 239
randoop.util.Randomness: total calls to random: 1124
randoop.util.Randomness: total calls to random: 1125
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1126
randoop.util.Randomness: total calls to random: 1127
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=241
-------------------------------------------
randoop.util.Randomness: total calls to random: 1128
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 220 sequences.
components: 220
randoop.util.Randomness: total calls to random: 1129
randoop.util.Randomness: total calls to random: 1130
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=242
-------------------------------------------
randoop.util.Randomness: total calls to random: 1131
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 221 sequences.
components: 221
randoop.util.Randomness: total calls to random: 1132
randoop.util.Randomness: total calls to random: 1133
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1134
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 221 sequences.
components: 221
randoop.util.Randomness: total calls to random: 1135
randoop.util.Randomness: total calls to random: 1136
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=243
-------------------------------------------
randoop.util.Randomness: total calls to random: 1137
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 242 sequences.
components: 242
randoop.util.Randomness: total calls to random: 1138
randoop.util.Randomness: total calls to random: 1139
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1140
randoop.util.Randomness: total calls to random: 1141
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=244
-------------------------------------------
randoop.util.Randomness: total calls to random: 1142
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 223 sequences.
components: 223
randoop.util.Randomness: total calls to random: 1143
randoop.util.Randomness: total calls to random: 1144
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  prim : long:0 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 
var18 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true
<randoop.PrimValue, value=1 [var18]  : true

allSequences.size()=245
-------------------------------------------
randoop.util.Randomness: total calls to random: 1145
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 224 sequences.
components: 224
randoop.util.Randomness: total calls to random: 1146
randoop.util.Randomness: total calls to random: 1147
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=246
-------------------------------------------
randoop.util.Randomness: total calls to random: 1148
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 225 sequences.
components: 225
randoop.util.Randomness: total calls to random: 1149
randoop.util.Randomness: total calls to random: 1150
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1151
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 225 sequences.
components: 225
randoop.util.Randomness: total calls to random: 1152
randoop.util.Randomness: total calls to random: 1153
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:-1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=247
-------------------------------------------
randoop.util.Randomness: total calls to random: 1154
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 226 sequences.
components: 226
randoop.util.Randomness: total calls to random: 1155
randoop.util.Randomness: total calls to random: 1156
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=248
-------------------------------------------
randoop.util.Randomness: total calls to random: 1157
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 227 sequences.
components: 227
randoop.util.Randomness: total calls to random: 1158
randoop.util.Randomness: total calls to random: 1159
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true

allSequences.size()=249
-------------------------------------------
randoop.util.Randomness: total calls to random: 1160
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 248 sequences.
components: 248
randoop.util.Randomness: total calls to random: 1161
randoop.util.Randomness: total calls to random: 1162
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1163
randoop.util.Randomness: total calls to random: 1164
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=250
-------------------------------------------
randoop.util.Randomness: total calls to random: 1165
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 229 sequences.
components: 229
randoop.util.Randomness: total calls to random: 1166
randoop.util.Randomness: total calls to random: 1167
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1168
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 229 sequences.
components: 229
randoop.util.Randomness: total calls to random: 1169
randoop.util.Randomness: total calls to random: 1170
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1171
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 249 sequences.
components: 249
randoop.util.Randomness: total calls to random: 1172
randoop.util.Randomness: total calls to random: 1173
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1174
randoop.util.Randomness: total calls to random: 1175
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:-1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=251
-------------------------------------------
randoop.util.Randomness: total calls to random: 1176
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 230 sequences.
components: 230
randoop.util.Randomness: total calls to random: 1177
randoop.util.Randomness: total calls to random: 1178
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=252
-------------------------------------------
randoop.util.Randomness: total calls to random: 1179
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 231 sequences.
components: 231
randoop.util.Randomness: total calls to random: 1180
randoop.util.Randomness: total calls to random: 1181
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1182
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 251 sequences.
components: 251
randoop.util.Randomness: total calls to random: 1183
randoop.util.Randomness: total calls to random: 1184
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1185
randoop.util.Randomness: total calls to random: 1186
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=253
-------------------------------------------
randoop.util.Randomness: total calls to random: 1187
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 232 sequences.
components: 232
randoop.util.Randomness: total calls to random: 1188
randoop.util.Randomness: total calls to random: 1189
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:100 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=254
-------------------------------------------
randoop.util.Randomness: total calls to random: 1190
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 233 sequences.
components: 233
randoop.util.Randomness: total calls to random: 1191
randoop.util.Randomness: total calls to random: 1192
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1193
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 233 sequences.
components: 233
randoop.util.Randomness: total calls to random: 1194
randoop.util.Randomness: total calls to random: 1195
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=255
-------------------------------------------
randoop.util.Randomness: total calls to random: 1196
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 234 sequences.
components: 234
randoop.util.Randomness: total calls to random: 1197
randoop.util.Randomness: total calls to random: 1198
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=256
-------------------------------------------
randoop.util.Randomness: total calls to random: 1199
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 255 sequences.
components: 255
randoop.util.Randomness: total calls to random: 1200
randoop.util.Randomness: total calls to random: 1201
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1202
randoop.util.Randomness: total calls to random: 1203
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  prim : long:0 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=257
-------------------------------------------
randoop.util.Randomness: total calls to random: 1204
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 256 sequences.
components: 256
randoop.util.Randomness: total calls to random: 1205
randoop.util.Randomness: total calls to random: 1206
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1207
randoop.util.Randomness: total calls to random: 1208
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  prim : long:0 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 
var18 =  method : Package_1.ClassId_0.m_0() : var0 
var19 =  prim : long:0 : 
var20 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var19 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Making index 20 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var19 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var20 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true
<randoop.PrimValue, value=1 [var18]  : true
<randoop.PrimValue, value=0 [var20]  : true

allSequences.size()=258
-------------------------------------------
randoop.util.Randomness: total calls to random: 1209
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 237 sequences.
components: 237
randoop.util.Randomness: total calls to random: 1210
randoop.util.Randomness: total calls to random: 1211
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=259
-------------------------------------------
randoop.util.Randomness: total calls to random: 1212
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 258 sequences.
components: 258
randoop.util.Randomness: total calls to random: 1213
randoop.util.Randomness: total calls to random: 1214
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1215
randoop.util.Randomness: total calls to random: 1216
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=260
-------------------------------------------
randoop.util.Randomness: total calls to random: 1217
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 239 sequences.
components: 239
randoop.util.Randomness: total calls to random: 1218
randoop.util.Randomness: total calls to random: 1219
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=261
-------------------------------------------
randoop.util.Randomness: total calls to random: 1220
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 240 sequences.
components: 240
randoop.util.Randomness: total calls to random: 1221
randoop.util.Randomness: total calls to random: 1222
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=262
-------------------------------------------
randoop.util.Randomness: total calls to random: 1223
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 241 sequences.
components: 241
randoop.util.Randomness: total calls to random: 1224
randoop.util.Randomness: total calls to random: 1225
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=263
-------------------------------------------
randoop.util.Randomness: total calls to random: 1226
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 242 sequences.
components: 242
randoop.util.Randomness: total calls to random: 1227
randoop.util.Randomness: total calls to random: 1228
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1229
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 242 sequences.
components: 242
randoop.util.Randomness: total calls to random: 1230
randoop.util.Randomness: total calls to random: 1231
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=264
-------------------------------------------
randoop.util.Randomness: total calls to random: 1232
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 263 sequences.
components: 263
randoop.util.Randomness: total calls to random: 1233
randoop.util.Randomness: total calls to random: 1234
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1235
randoop.util.Randomness: total calls to random: 1236
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:10 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:-1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=265
-------------------------------------------
randoop.util.Randomness: total calls to random: 1237
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 264 sequences.
components: 264
randoop.util.Randomness: total calls to random: 1238
randoop.util.Randomness: total calls to random: 1239
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1240
randoop.util.Randomness: total calls to random: 1241
Successfully created new unique sequence:var0 =  cons : Package_1.ClassId_2.<init>() : 
var1 =  prim : long:100 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  prim : long:1 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:0 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:1 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_1.ClassId_2
Sequence after execution: 
Package_1.ClassId_2 var0 = new Package_1.ClassId_2();
// <NormalExecution object=object-of-type-Package_1.ClassId_2>;
java.lang.Long var1 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=266
-------------------------------------------
randoop.util.Randomness: total calls to random: 1242
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 265 sequences.
components: 265
randoop.util.Randomness: total calls to random: 1243
randoop.util.Randomness: total calls to random: 1244
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1245
randoop.util.Randomness: total calls to random: 1246
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:10 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=267
-------------------------------------------
randoop.util.Randomness: total calls to random: 1247
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 266 sequences.
components: 266
randoop.util.Randomness: total calls to random: 1248
randoop.util.Randomness: total calls to random: 1249
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1250
randoop.util.Randomness: total calls to random: 1251
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=268
-------------------------------------------
randoop.util.Randomness: total calls to random: 1252
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 245 sequences.
components: 245
randoop.util.Randomness: total calls to random: 1253
randoop.util.Randomness: total calls to random: 1254
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1255
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 245 sequences.
components: 245
randoop.util.Randomness: total calls to random: 1256
randoop.util.Randomness: total calls to random: 1257
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  prim : long:10 : 
var3 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var2 
var4 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var2 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=0 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true

allSequences.size()=269
-------------------------------------------
randoop.util.Randomness: total calls to random: 1258
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 246 sequences.
components: 246
randoop.util.Randomness: total calls to random: 1259
randoop.util.Randomness: total calls to random: 1260
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1261
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 246 sequences.
components: 246
randoop.util.Randomness: total calls to random: 1262
randoop.util.Randomness: total calls to random: 1263
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=270
-------------------------------------------
randoop.util.Randomness: total calls to random: 1264
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 247 sequences.
components: 247
randoop.util.Randomness: total calls to random: 1265
randoop.util.Randomness: total calls to random: 1266
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=271
-------------------------------------------
randoop.util.Randomness: total calls to random: 1267
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 248 sequences.
components: 248
randoop.util.Randomness: total calls to random: 1268
randoop.util.Randomness: total calls to random: 1269
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=272
-------------------------------------------
randoop.util.Randomness: total calls to random: 1270
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 271 sequences.
components: 271
randoop.util.Randomness: total calls to random: 1271
randoop.util.Randomness: total calls to random: 1272
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1273
randoop.util.Randomness: total calls to random: 1274
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=273
-------------------------------------------
randoop.util.Randomness: total calls to random: 1275
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 250 sequences.
components: 250
randoop.util.Randomness: total calls to random: 1276
randoop.util.Randomness: total calls to random: 1277
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1278
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 250 sequences.
components: 250
randoop.util.Randomness: total calls to random: 1279
randoop.util.Randomness: total calls to random: 1280
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1281
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 272 sequences.
components: 272
randoop.util.Randomness: total calls to random: 1282
randoop.util.Randomness: total calls to random: 1283
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1284
randoop.util.Randomness: total calls to random: 1285
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=274
-------------------------------------------
randoop.util.Randomness: total calls to random: 1286
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 251 sequences.
components: 251
randoop.util.Randomness: total calls to random: 1287
randoop.util.Randomness: total calls to random: 1288
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1289
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 273 sequences.
components: 273
randoop.util.Randomness: total calls to random: 1290
randoop.util.Randomness: total calls to random: 1291
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1292
randoop.util.Randomness: total calls to random: 1293
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:-1 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 
var17 =  prim : long:10 : 
var18 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var17 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=275
-------------------------------------------
randoop.util.Randomness: total calls to random: 1294
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 274 sequences.
components: 274
randoop.util.Randomness: total calls to random: 1295
randoop.util.Randomness: total calls to random: 1296
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1297
randoop.util.Randomness: total calls to random: 1298
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=276
-------------------------------------------
randoop.util.Randomness: total calls to random: 1299
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 275 sequences.
components: 275
randoop.util.Randomness: total calls to random: 1300
randoop.util.Randomness: total calls to random: 1301
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1302
randoop.util.Randomness: total calls to random: 1303
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:10 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=277
-------------------------------------------
randoop.util.Randomness: total calls to random: 1304
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 276 sequences.
components: 276
randoop.util.Randomness: total calls to random: 1305
randoop.util.Randomness: total calls to random: 1306
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1307
randoop.util.Randomness: total calls to random: 1308
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:0 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=278
-------------------------------------------
randoop.util.Randomness: total calls to random: 1309
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 255 sequences.
components: 255
randoop.util.Randomness: total calls to random: 1310
randoop.util.Randomness: total calls to random: 1311
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1312
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 255 sequences.
components: 255
randoop.util.Randomness: total calls to random: 1313
randoop.util.Randomness: total calls to random: 1314
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1315
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 277 sequences.
components: 277
randoop.util.Randomness: total calls to random: 1316
randoop.util.Randomness: total calls to random: 1317
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1318
randoop.util.Randomness: total calls to random: 1319
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  prim : long:100 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true

allSequences.size()=279
-------------------------------------------
randoop.util.Randomness: total calls to random: 1320
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 256 sequences.
components: 256
randoop.util.Randomness: total calls to random: 1321
randoop.util.Randomness: total calls to random: 1322
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1323
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 256 sequences.
components: 256
randoop.util.Randomness: total calls to random: 1324
randoop.util.Randomness: total calls to random: 1325
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1326
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 278 sequences.
components: 278
randoop.util.Randomness: total calls to random: 1327
randoop.util.Randomness: total calls to random: 1328
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1329
randoop.util.Randomness: total calls to random: 1330
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:10 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=280
-------------------------------------------
randoop.util.Randomness: total calls to random: 1331
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 257 sequences.
components: 257
randoop.util.Randomness: total calls to random: 1332
randoop.util.Randomness: total calls to random: 1333
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=281
-------------------------------------------
randoop.util.Randomness: total calls to random: 1334
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 280 sequences.
components: 280
randoop.util.Randomness: total calls to random: 1335
randoop.util.Randomness: total calls to random: 1336
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1337
randoop.util.Randomness: total calls to random: 1338
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1339
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 258 sequences.
components: 258
randoop.util.Randomness: total calls to random: 1340
randoop.util.Randomness: total calls to random: 1341
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=282
-------------------------------------------
randoop.util.Randomness: total calls to random: 1342
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 281 sequences.
components: 281
randoop.util.Randomness: total calls to random: 1343
randoop.util.Randomness: total calls to random: 1344
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1345
randoop.util.Randomness: total calls to random: 1346
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  prim : long:10 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=283
-------------------------------------------
randoop.util.Randomness: total calls to random: 1347
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 260 sequences.
components: 260
randoop.util.Randomness: total calls to random: 1348
randoop.util.Randomness: total calls to random: 1349
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1350
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 260 sequences.
components: 260
randoop.util.Randomness: total calls to random: 1351
randoop.util.Randomness: total calls to random: 1352
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1353
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 260 sequences.
components: 260
randoop.util.Randomness: total calls to random: 1354
randoop.util.Randomness: total calls to random: 1355
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=284
-------------------------------------------
randoop.util.Randomness: total calls to random: 1356
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 261 sequences.
components: 261
randoop.util.Randomness: total calls to random: 1357
randoop.util.Randomness: total calls to random: 1358
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=285
-------------------------------------------
randoop.util.Randomness: total calls to random: 1359
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 262 sequences.
components: 262
randoop.util.Randomness: total calls to random: 1360
randoop.util.Randomness: total calls to random: 1361
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  prim : long:0 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=286
-------------------------------------------
randoop.util.Randomness: total calls to random: 1362
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 285 sequences.
components: 285
randoop.util.Randomness: total calls to random: 1363
randoop.util.Randomness: total calls to random: 1364
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1365
randoop.util.Randomness: total calls to random: 1366
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=287
-------------------------------------------
randoop.util.Randomness: total calls to random: 1367
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 286 sequences.
components: 286
randoop.util.Randomness: total calls to random: 1368
randoop.util.Randomness: total calls to random: 1369
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1370
randoop.util.Randomness: total calls to random: 1371
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:10 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=288
-------------------------------------------
randoop.util.Randomness: total calls to random: 1372
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 265 sequences.
components: 265
randoop.util.Randomness: total calls to random: 1373
randoop.util.Randomness: total calls to random: 1374
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:-1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=289
-------------------------------------------
randoop.util.Randomness: total calls to random: 1375
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1376
randoop.util.Randomness: total calls to random: 1377
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1378
randoop.util.Randomness: total calls to random: 1379
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:-1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=290
-------------------------------------------
randoop.util.Randomness: total calls to random: 1380
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 267 sequences.
components: 267
randoop.util.Randomness: total calls to random: 1381
randoop.util.Randomness: total calls to random: 1382
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1383
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 267 sequences.
components: 267
randoop.util.Randomness: total calls to random: 1384
randoop.util.Randomness: total calls to random: 1385
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=291
-------------------------------------------
randoop.util.Randomness: total calls to random: 1386
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 268 sequences.
components: 268
randoop.util.Randomness: total calls to random: 1387
randoop.util.Randomness: total calls to random: 1388
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1389
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 290 sequences.
components: 290
randoop.util.Randomness: total calls to random: 1390
randoop.util.Randomness: total calls to random: 1391
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1392
randoop.util.Randomness: total calls to random: 1393
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:0 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=292
-------------------------------------------
randoop.util.Randomness: total calls to random: 1394
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 291 sequences.
components: 291
randoop.util.Randomness: total calls to random: 1395
randoop.util.Randomness: total calls to random: 1396
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1397
randoop.util.Randomness: total calls to random: 1398
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1399
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 269 sequences.
components: 269
randoop.util.Randomness: total calls to random: 1400
randoop.util.Randomness: total calls to random: 1401
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=293
-------------------------------------------
randoop.util.Randomness: total calls to random: 1402
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 270 sequences.
components: 270
randoop.util.Randomness: total calls to random: 1403
randoop.util.Randomness: total calls to random: 1404
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1405
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 270 sequences.
components: 270
randoop.util.Randomness: total calls to random: 1406
randoop.util.Randomness: total calls to random: 1407
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true

allSequences.size()=294
-------------------------------------------
randoop.util.Randomness: total calls to random: 1408
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 271 sequences.
components: 271
randoop.util.Randomness: total calls to random: 1409
randoop.util.Randomness: total calls to random: 1410
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=295
-------------------------------------------
randoop.util.Randomness: total calls to random: 1411
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 272 sequences.
components: 272
randoop.util.Randomness: total calls to random: 1412
randoop.util.Randomness: total calls to random: 1413
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true

allSequences.size()=296
-------------------------------------------
randoop.util.Randomness: total calls to random: 1414
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 273 sequences.
components: 273
randoop.util.Randomness: total calls to random: 1415
randoop.util.Randomness: total calls to random: 1416
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1417
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 273 sequences.
components: 273
randoop.util.Randomness: total calls to random: 1418
randoop.util.Randomness: total calls to random: 1419
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1420
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 273 sequences.
components: 273
randoop.util.Randomness: total calls to random: 1421
randoop.util.Randomness: total calls to random: 1422
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=297
-------------------------------------------
randoop.util.Randomness: total calls to random: 1423
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 296 sequences.
components: 296
randoop.util.Randomness: total calls to random: 1424
randoop.util.Randomness: total calls to random: 1425
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1426
randoop.util.Randomness: total calls to random: 1427
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=298
-------------------------------------------
randoop.util.Randomness: total calls to random: 1428
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 275 sequences.
components: 275
randoop.util.Randomness: total calls to random: 1429
randoop.util.Randomness: total calls to random: 1430
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:-1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=299
-------------------------------------------
randoop.util.Randomness: total calls to random: 1431
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 276 sequences.
components: 276
randoop.util.Randomness: total calls to random: 1432
randoop.util.Randomness: total calls to random: 1433
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:-1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=300
-------------------------------------------
randoop.util.Randomness: total calls to random: 1434
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 299 sequences.
components: 299
randoop.util.Randomness: total calls to random: 1435
randoop.util.Randomness: total calls to random: 1436
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1437
randoop.util.Randomness: total calls to random: 1438
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  prim : long:0 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  prim : long:-1 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true

allSequences.size()=301
-------------------------------------------
randoop.util.Randomness: total calls to random: 1439
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 278 sequences.
components: 278
randoop.util.Randomness: total calls to random: 1440
randoop.util.Randomness: total calls to random: 1441
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1442
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 278 sequences.
components: 278
randoop.util.Randomness: total calls to random: 1443
randoop.util.Randomness: total calls to random: 1444
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true

allSequences.size()=302
-------------------------------------------
randoop.util.Randomness: total calls to random: 1445
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 279 sequences.
components: 279
randoop.util.Randomness: total calls to random: 1446
randoop.util.Randomness: total calls to random: 1447
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1448
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 279 sequences.
components: 279
randoop.util.Randomness: total calls to random: 1449
randoop.util.Randomness: total calls to random: 1450
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:100 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=303
-------------------------------------------
randoop.util.Randomness: total calls to random: 1451
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 280 sequences.
components: 280
randoop.util.Randomness: total calls to random: 1452
randoop.util.Randomness: total calls to random: 1453
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=304
-------------------------------------------
randoop.util.Randomness: total calls to random: 1454
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 281 sequences.
components: 281
randoop.util.Randomness: total calls to random: 1455
randoop.util.Randomness: total calls to random: 1456
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1457
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 303 sequences.
components: 303
randoop.util.Randomness: total calls to random: 1458
randoop.util.Randomness: total calls to random: 1459
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1460
randoop.util.Randomness: total calls to random: 1461
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=305
-------------------------------------------
randoop.util.Randomness: total calls to random: 1462
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 304 sequences.
components: 304
randoop.util.Randomness: total calls to random: 1463
randoop.util.Randomness: total calls to random: 1464
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1465
randoop.util.Randomness: total calls to random: 1466
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true

allSequences.size()=306
-------------------------------------------
randoop.util.Randomness: total calls to random: 1467
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 283 sequences.
components: 283
randoop.util.Randomness: total calls to random: 1468
randoop.util.Randomness: total calls to random: 1469
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:10 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:10 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=307
-------------------------------------------
randoop.util.Randomness: total calls to random: 1470
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 284 sequences.
components: 284
randoop.util.Randomness: total calls to random: 1471
randoop.util.Randomness: total calls to random: 1472
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_0.ClassId_1.methodid_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=308
-------------------------------------------
randoop.util.Randomness: total calls to random: 1473
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 307 sequences.
components: 307
randoop.util.Randomness: total calls to random: 1474
randoop.util.Randomness: total calls to random: 1475
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1476
randoop.util.Randomness: total calls to random: 1477
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true

allSequences.size()=309
-------------------------------------------
randoop.util.Randomness: total calls to random: 1478
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 308 sequences.
components: 308
randoop.util.Randomness: total calls to random: 1479
randoop.util.Randomness: total calls to random: 1480
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1481
randoop.util.Randomness: total calls to random: 1482
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=310
-------------------------------------------
randoop.util.Randomness: total calls to random: 1483
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 287 sequences.
components: 287
randoop.util.Randomness: total calls to random: 1484
randoop.util.Randomness: total calls to random: 1485
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=311
-------------------------------------------
randoop.util.Randomness: total calls to random: 1486
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 288 sequences.
components: 288
randoop.util.Randomness: total calls to random: 1487
randoop.util.Randomness: total calls to random: 1488
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  prim : long:1 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_0.ClassId_1.methodid_0() : var0 
var17 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=1 [var17]  : true

allSequences.size()=312
-------------------------------------------
randoop.util.Randomness: total calls to random: 1489
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 289 sequences.
components: 289
randoop.util.Randomness: total calls to random: 1490
randoop.util.Randomness: total calls to random: 1491
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1492
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 289 sequences.
components: 289
randoop.util.Randomness: total calls to random: 1493
randoop.util.Randomness: total calls to random: 1494
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:100 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  prim : long:10 : 
var14 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var13 
var15 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var13 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=0 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=313
-------------------------------------------
randoop.util.Randomness: total calls to random: 1495
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 312 sequences.
components: 312
randoop.util.Randomness: total calls to random: 1496
randoop.util.Randomness: total calls to random: 1497
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1498
randoop.util.Randomness: total calls to random: 1499
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  prim : long:-1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:0 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=314
-------------------------------------------
randoop.util.Randomness: total calls to random: 1500
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 313 sequences.
components: 313
randoop.util.Randomness: total calls to random: 1501
randoop.util.Randomness: total calls to random: 1502
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1503
randoop.util.Randomness: total calls to random: 1504
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=315
-------------------------------------------
randoop.util.Randomness: total calls to random: 1505
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 292 sequences.
components: 292
randoop.util.Randomness: total calls to random: 1506
randoop.util.Randomness: total calls to random: 1507
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1508
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 292 sequences.
components: 292
randoop.util.Randomness: total calls to random: 1509
randoop.util.Randomness: total calls to random: 1510
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:10 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=316
-------------------------------------------
randoop.util.Randomness: total calls to random: 1511
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 293 sequences.
components: 293
randoop.util.Randomness: total calls to random: 1512
randoop.util.Randomness: total calls to random: 1513
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true

allSequences.size()=317
-------------------------------------------
randoop.util.Randomness: total calls to random: 1514
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 316 sequences.
components: 316
randoop.util.Randomness: total calls to random: 1515
randoop.util.Randomness: total calls to random: 1516
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1517
randoop.util.Randomness: total calls to random: 1518
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:-1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=318
-------------------------------------------
randoop.util.Randomness: total calls to random: 1519
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 317 sequences.
components: 317
randoop.util.Randomness: total calls to random: 1520
randoop.util.Randomness: total calls to random: 1521
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1522
randoop.util.Randomness: total calls to random: 1523
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  prim : long:0 : 
var2 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var1 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  method : Package_0.ClassId_1.methodid_0() : var0 
var5 =  prim : long:0 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
java.lang.Long var1 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=0 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true

allSequences.size()=319
-------------------------------------------
randoop.util.Randomness: total calls to random: 1524
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 318 sequences.
components: 318
randoop.util.Randomness: total calls to random: 1525
randoop.util.Randomness: total calls to random: 1526
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1527
randoop.util.Randomness: total calls to random: 1528
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=320
-------------------------------------------
randoop.util.Randomness: total calls to random: 1529
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 297 sequences.
components: 297
randoop.util.Randomness: total calls to random: 1530
randoop.util.Randomness: total calls to random: 1531
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_0.ClassId_1.methodid_0() : var0 
var3 =  method : Package_0.ClassId_1.methodid_0() : var0 
var4 =  prim : long:-1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true

allSequences.size()=321
-------------------------------------------
randoop.util.Randomness: total calls to random: 1532
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 298 sequences.
components: 298
randoop.util.Randomness: total calls to random: 1533
randoop.util.Randomness: total calls to random: 1534
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1535
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 320 sequences.
components: 320
randoop.util.Randomness: total calls to random: 1536
randoop.util.Randomness: total calls to random: 1537
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1538
randoop.util.Randomness: total calls to random: 1539
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  prim : long:-1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:-1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true

allSequences.size()=322
-------------------------------------------
randoop.util.Randomness: total calls to random: 1540
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 321 sequences.
components: 321
randoop.util.Randomness: total calls to random: 1541
randoop.util.Randomness: total calls to random: 1542
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1543
randoop.util.Randomness: total calls to random: 1544
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  method : Package_0.ClassId_1.methodid_0() : var0 
var7 =  prim : long:100 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true

allSequences.size()=323
-------------------------------------------
randoop.util.Randomness: total calls to random: 1545
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 322 sequences.
components: 322
randoop.util.Randomness: total calls to random: 1546
randoop.util.Randomness: total calls to random: 1547
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1548
randoop.util.Randomness: total calls to random: 1549
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:1 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  prim : long:-1 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true

allSequences.size()=324
-------------------------------------------
randoop.util.Randomness: total calls to random: 1550
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 301 sequences.
components: 301
randoop.util.Randomness: total calls to random: 1551
randoop.util.Randomness: total calls to random: 1552
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:-1 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 
var17 =  prim : long:10 : 
var18 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var17 
var19 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Making index 19 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var17 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var19 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true
<randoop.PrimValue, value=1 [var19]  : true

allSequences.size()=325
-------------------------------------------
randoop.util.Randomness: total calls to random: 1553
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 302 sequences.
components: 302
randoop.util.Randomness: total calls to random: 1554
randoop.util.Randomness: total calls to random: 1555
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:100 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  prim : long:0 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=326
-------------------------------------------
randoop.util.Randomness: total calls to random: 1556
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 325 sequences.
components: 325
randoop.util.Randomness: total calls to random: 1557
randoop.util.Randomness: total calls to random: 1558
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1559
randoop.util.Randomness: total calls to random: 1560
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  prim : long:0 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true

allSequences.size()=327
-------------------------------------------
randoop.util.Randomness: total calls to random: 1561
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 304 sequences.
components: 304
randoop.util.Randomness: total calls to random: 1562
randoop.util.Randomness: total calls to random: 1563
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1564
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 326 sequences.
components: 326
randoop.util.Randomness: total calls to random: 1565
randoop.util.Randomness: total calls to random: 1566
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1567
randoop.util.Randomness: total calls to random: 1568
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  prim : long:-1 : 
var17 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var16 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var16 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var17 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=0 [var17]  : true

allSequences.size()=328
-------------------------------------------
randoop.util.Randomness: total calls to random: 1569
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 327 sequences.
components: 327
randoop.util.Randomness: total calls to random: 1570
randoop.util.Randomness: total calls to random: 1571
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1572
randoop.util.Randomness: total calls to random: 1573
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:10 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=329
-------------------------------------------
randoop.util.Randomness: total calls to random: 1574
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 306 sequences.
components: 306
randoop.util.Randomness: total calls to random: 1575
randoop.util.Randomness: total calls to random: 1576
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=330
-------------------------------------------
randoop.util.Randomness: total calls to random: 1577
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 307 sequences.
components: 307
randoop.util.Randomness: total calls to random: 1578
randoop.util.Randomness: total calls to random: 1579
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true

allSequences.size()=331
-------------------------------------------
randoop.util.Randomness: total calls to random: 1580
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 308 sequences.
components: 308
randoop.util.Randomness: total calls to random: 1581
randoop.util.Randomness: total calls to random: 1582
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1583
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 308 sequences.
components: 308
randoop.util.Randomness: total calls to random: 1584
randoop.util.Randomness: total calls to random: 1585
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_1.ClassId_0.m_0() : var0 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=332
-------------------------------------------
randoop.util.Randomness: total calls to random: 1586
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 331 sequences.
components: 331
randoop.util.Randomness: total calls to random: 1587
randoop.util.Randomness: total calls to random: 1588
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1589
randoop.util.Randomness: total calls to random: 1590
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:0 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 
var17 =  prim : long:-1 : 
var18 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var17 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=333
-------------------------------------------
randoop.util.Randomness: total calls to random: 1591
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 310 sequences.
components: 310
randoop.util.Randomness: total calls to random: 1592
randoop.util.Randomness: total calls to random: 1593
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:-1 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=334
-------------------------------------------
randoop.util.Randomness: total calls to random: 1594
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 311 sequences.
components: 311
randoop.util.Randomness: total calls to random: 1595
randoop.util.Randomness: total calls to random: 1596
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=335
-------------------------------------------
randoop.util.Randomness: total calls to random: 1597
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 312 sequences.
components: 312
randoop.util.Randomness: total calls to random: 1598
randoop.util.Randomness: total calls to random: 1599
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=336
-------------------------------------------
randoop.util.Randomness: total calls to random: 1600
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 335 sequences.
components: 335
randoop.util.Randomness: total calls to random: 1601
randoop.util.Randomness: total calls to random: 1602
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1603
randoop.util.Randomness: total calls to random: 1604
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=337
-------------------------------------------
randoop.util.Randomness: total calls to random: 1605
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 314 sequences.
components: 314
randoop.util.Randomness: total calls to random: 1606
randoop.util.Randomness: total calls to random: 1607
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1608
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 314 sequences.
components: 314
randoop.util.Randomness: total calls to random: 1609
randoop.util.Randomness: total calls to random: 1610
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_1.ClassId_0.m_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=338
-------------------------------------------
randoop.util.Randomness: total calls to random: 1611
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 315 sequences.
components: 315
randoop.util.Randomness: total calls to random: 1612
randoop.util.Randomness: total calls to random: 1613
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:10 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=339
-------------------------------------------
randoop.util.Randomness: total calls to random: 1614
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 316 sequences.
components: 316
randoop.util.Randomness: total calls to random: 1615
randoop.util.Randomness: total calls to random: 1616
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=340
-------------------------------------------
randoop.util.Randomness: total calls to random: 1617
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 339 sequences.
components: 339
randoop.util.Randomness: total calls to random: 1618
randoop.util.Randomness: total calls to random: 1619
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1620
randoop.util.Randomness: total calls to random: 1621
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  prim : long:100 : 
var15 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var14 
var16 =  method : Package_1.ClassId_0.m_0() : var0 
var17 =  prim : long:10 : 
var18 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var14 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var17 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=0 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=341
-------------------------------------------
randoop.util.Randomness: total calls to random: 1622
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 318 sequences.
components: 318
randoop.util.Randomness: total calls to random: 1623
randoop.util.Randomness: total calls to random: 1624
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:0 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:0 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=342
-------------------------------------------
randoop.util.Randomness: total calls to random: 1625
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 319 sequences.
components: 319
randoop.util.Randomness: total calls to random: 1626
randoop.util.Randomness: total calls to random: 1627
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  prim : long:10 : 
var8 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var7 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  prim : long:-1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var7 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=0 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true

allSequences.size()=343
-------------------------------------------
randoop.util.Randomness: total calls to random: 1628
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 342 sequences.
components: 342
randoop.util.Randomness: total calls to random: 1629
randoop.util.Randomness: total calls to random: 1630
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1631
randoop.util.Randomness: total calls to random: 1632
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:100 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:1 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true

allSequences.size()=344
-------------------------------------------
randoop.util.Randomness: total calls to random: 1633
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 321 sequences.
components: 321
randoop.util.Randomness: total calls to random: 1634
randoop.util.Randomness: total calls to random: 1635
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1636
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 343 sequences.
components: 343
randoop.util.Randomness: total calls to random: 1637
randoop.util.Randomness: total calls to random: 1638
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1639
randoop.util.Randomness: total calls to random: 1640
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_0.ClassId_1.methodid_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  prim : long:1 : 
var10 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var9 
var11 =  prim : long:0 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var9 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=0 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true

allSequences.size()=345
-------------------------------------------
randoop.util.Randomness: total calls to random: 1641
Selected statement: Package_1.ClassId_2.methodid_1(long)
Will query component set for objects of typeclass Package_1.ClassId_2
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_2
getActivesequencesThatYield: returning 344 sequences.
components: 344
randoop.util.Randomness: total calls to random: 1642
randoop.util.Randomness: total calls to random: 1643
Will query component set for objects of typelong
getActivesequencesThatYield: entering method, clazz=long
getActivesequencesThatYield: returning 5 sequences.
components: 5
randoop.util.Randomness: total calls to random: 1644
randoop.util.Randomness: total calls to random: 1645
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_0.ClassId_1.methodid_0() : var0 
var10 =  prim : long:1 : 
var11 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var10 
var12 =  prim : long:100 : 
var13 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var12 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 
var15 =  prim : long:0 : 
var16 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var15 
var17 =  prim : long:10 : 
var18 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var17 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Making index 17 inactive (value is a primitive)
Making index 18 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var10 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var12 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var15 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var17 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var18 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=0 [var11]  : true
<randoop.PrimValue, value=0 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=0 [var16]  : true
<randoop.PrimValue, value=0 [var18]  : true

allSequences.size()=346
-------------------------------------------
randoop.util.Randomness: total calls to random: 1646
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 323 sequences.
components: 323
randoop.util.Randomness: total calls to random: 1647
randoop.util.Randomness: total calls to random: 1648
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_1.ClassId_0.m_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  method : Package_0.ClassId_1.methodid_0() : var0 
var12 =  method : Package_1.ClassId_0.m_0() : var0 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 
var14 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var11 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=1 [var11]  : true
<randoop.PrimValue, value=1 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true

allSequences.size()=347
-------------------------------------------
randoop.util.Randomness: total calls to random: 1649
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 324 sequences.
components: 324
randoop.util.Randomness: total calls to random: 1650
randoop.util.Randomness: total calls to random: 1651
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1652
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 324 sequences.
components: 324
randoop.util.Randomness: total calls to random: 1653
randoop.util.Randomness: total calls to random: 1654
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:10 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true

allSequences.size()=348
-------------------------------------------
randoop.util.Randomness: total calls to random: 1655
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 325 sequences.
components: 325
randoop.util.Randomness: total calls to random: 1656
randoop.util.Randomness: total calls to random: 1657
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_1.ClassId_0.m_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_1.ClassId_0.m_0() : var0 
var14 =  method : Package_1.ClassId_0.m_0() : var0 
var15 =  method : Package_0.ClassId_1.methodid_0() : var0 
var16 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Making index 14 inactive (value is a primitive)
Making index 15 inactive (value is a primitive)
Making index 16 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var14 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var15 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var16 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true
<randoop.PrimValue, value=1 [var14]  : true
<randoop.PrimValue, value=1 [var15]  : true
<randoop.PrimValue, value=1 [var16]  : true

allSequences.size()=349
-------------------------------------------
randoop.util.Randomness: total calls to random: 1658
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 326 sequences.
components: 326
randoop.util.Randomness: total calls to random: 1659
randoop.util.Randomness: total calls to random: 1660
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  prim : long:1 : 
var5 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var4 
var6 =  method : Package_1.ClassId_0.m_0() : var0 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  method : Package_0.ClassId_1.methodid_0() : var0 
var9 =  method : Package_1.ClassId_0.m_0() : var0 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:-1 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var4 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var8 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1((-1L));
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=0 [var5]  : true
<randoop.PrimValue, value=1 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=1 [var8]  : true
<randoop.PrimValue, value=1 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=350
-------------------------------------------
randoop.util.Randomness: total calls to random: 1661
Selected statement: Package_0.ClassId_1.methodid_0()
Will query component set for objects of typeclass Package_0.ClassId_1
getActivesequencesThatYield: entering method, clazz=class Package_0.ClassId_1
getActivesequencesThatYield: returning 327 sequences.
components: 327
randoop.util.Randomness: total calls to random: 1662
randoop.util.Randomness: total calls to random: 1663
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  prim : long:0 : 
var4 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var3 
var5 =  prim : long:1 : 
var6 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var5 
var7 =  method : Package_1.ClassId_0.m_0() : var0 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_0.ClassId_1.methodid_0() : var0 
var11 =  prim : long:10 : 
var12 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var11 
var13 =  method : Package_0.ClassId_1.methodid_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Making index 11 inactive (value is a primitive)
Making index 12 inactive (value is a primitive)
Making index 13 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var3 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var5 = new java.lang.Long(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var6 = var0.methodid_1(1L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var11 = new java.lang.Long(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var12 = var0.methodid_1(10L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var13 = var0.methodid_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=0 [var4]  : true
<randoop.PrimValue, value=0 [var6]  : true
<randoop.PrimValue, value=1 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true
<randoop.PrimValue, value=0 [var12]  : true
<randoop.PrimValue, value=1 [var13]  : true

allSequences.size()=351
-------------------------------------------
randoop.util.Randomness: total calls to random: 1664
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 328 sequences.
components: 328
randoop.util.Randomness: total calls to random: 1665
randoop.util.Randomness: total calls to random: 1666
Sequence discarded because the same sequence was previously created.
-------------------------------------------
randoop.util.Randomness: total calls to random: 1667
Selected statement: Package_1.ClassId_0.m_0()
Will query component set for objects of typeclass Package_1.ClassId_0
getActivesequencesThatYield: entering method, clazz=class Package_1.ClassId_0
getActivesequencesThatYield: returning 328 sequences.
components: 328
randoop.util.Randomness: total calls to random: 1668
randoop.util.Randomness: total calls to random: 1669
Successfully created new unique sequence:var0 =  cons : Package_0.ClassId_1.<init>() : 
var1 =  method : Package_1.ClassId_0.m_0() : var0 
var2 =  method : Package_1.ClassId_0.m_0() : var0 
var3 =  method : Package_1.ClassId_0.m_0() : var0 
var4 =  method : Package_1.ClassId_0.m_0() : var0 
var5 =  method : Package_1.ClassId_0.m_0() : var0 
var6 =  prim : long:0 : 
var7 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var6 
var8 =  prim : long:100 : 
var9 =  method : Package_1.ClassId_2.methodid_1(long) : var0 var8 
var10 =  method : Package_1.ClassId_0.m_0() : var0 

Checking contract class randoop.EqualsHashcode on 0, 0
Contract returned true.
Checking contract class randoop.EqualsSymmetric on 0, 0
Contract returned true.
Making index 0 active.
Making index 1 inactive (value is a primitive)
Making index 2 inactive (value is a primitive)
Making index 3 inactive (value is a primitive)
Making index 4 inactive (value is a primitive)
Making index 5 inactive (value is a primitive)
Making index 6 inactive (value is a primitive)
Making index 7 inactive (value is a primitive)
Making index 8 inactive (value is a primitive)
Making index 9 inactive (value is a primitive)
Making index 10 inactive (value is a primitive)
Adding sequence to active sequences of type class Package_0.ClassId_1
Sequence after execution: 
Package_0.ClassId_1 var0 = new Package_0.ClassId_1();
// <NormalExecution object=object-of-type-Package_0.ClassId_1>;
long var1 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var2 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var3 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var4 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
long var5 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var6 = new java.lang.Long(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var7 = var0.methodid_1(0L);
// <NormalExecution object=object-of-type-java.lang.Long>;
java.lang.Long var8 = new java.lang.Long(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var9 = var0.methodid_1(100L);
// <NormalExecution object=object-of-type-java.lang.Long>;
long var10 = var0.m_0();
// <NormalExecution object=object-of-type-java.lang.Long>;
<randoop.PrimValue, value=1 [var1]  : true
<randoop.PrimValue, value=1 [var2]  : true
<randoop.PrimValue, value=1 [var3]  : true
<randoop.PrimValue, value=1 [var4]  : true
<randoop.PrimValue, value=1 [var5]  : true
<randoop.PrimValue, value=0 [var7]  : true
<randoop.PrimValue, value=0 [var9]  : true
<randoop.PrimValue, value=1 [var10]  : true

allSequences.size()=352
